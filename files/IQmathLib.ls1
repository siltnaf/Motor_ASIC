A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\OUTPUT\IQmathLib.OBJ
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE .\OUTPUT\IQmathLib.src PR(.\files\IQmathLib.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\OUTPUT\IQmathLib.SRC generated from: SRC\IQmathLib.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\Keil_v5\C51\BIN\C51.EXE SRC\IQmathLib.c OPTIMIZE(0,SPEED) REGFILE(.\OUTPUT\moto
                             r.ORC) BROWSE INTVECTOR(0X2000) INCDIR(.\INC) DEBUG OBJECTEXTEND CODE PRINT(.\files\IQmathL
                             ib.lst) TABS(2) SRC(.\OUTPUT\IQmathLib.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    IQMATHLIB
                       8     
  00CE                 9     P2ETCLR DATA    0CEH
  009B                10     TB80    BIT     098H.3
  00DE                11     P3ETCLR DATA    0DEH
  00A1                12     P1TBPRD DATA    0A1H
  0080                13     P0      DATA    080H
  00F6                14     P4ETCLR DATA    0F6H
  00C1                15     P2TBPRD DATA    0C1H
  0090                16     P1      DATA    090H
  00D1                17     P3TBPRD DATA    0D1H
  00A0                18     P2      DATA    0A0H
  00E1                19     P4TBPRD DATA    0E1H
  00B0                20     P3      DATA    0B0H
  009D                21     SM20    BIT     098H.5
  00B1                22     P1AQCSFRC       DATA    0B1H
  00C9                23     P2AQCSFRC       DATA    0C9H
  00D9                24     P3AQCSFRC       DATA    0D9H
  00F1                25     P4AQCSFRC       DATA    0F1H
  00B2                26     P1TZFLG DATA    0B2H
  00CA                27     P2TZFLG DATA    0CAH
  00DA                28     P3TZFLG DATA    0DAH
  00B4                29     P1TZFRC DATA    0B4H
  00A8                30     IEN0    DATA    0A8H
  00F2                31     P4TZFLG DATA    0F2H
  00CC                32     P2TZFRC DATA    0CCH
  00A8                33     IE      DATA    0A8H
  00B8                34     EADC    BIT     0B8H.0
  00B8                35     IEN1    DATA    0B8H
  0085                36     DPH1    DATA    085H
  00DC                37     P3TZFRC DATA    0DCH
  009A                38     IEN2    DATA    09AH
  00F4                39     P4TZFRC DATA    0F4H
  008F                40     CLK_PD_CON      DATA    08FH
  00C0                41     IADC    BIT     0C0H.0
  0084                42     DPL1    DATA    084H
  00B3                43     P1TZCLR DATA    0B3H
  00CB                44     P2TZCLR DATA    0CBH
  00DF                45     WDCON_7 BIT     0D8H.7
  00CD                46     I2FR    BIT     0C8H.5
  00DB                47     P3TZCLR DATA    0DBH
  00CE                48     I3FR    BIT     0C8H.6
  00F3                49     P4TZCLR DATA    0F3H
  009C                50     REN0    BIT     098H.4
  00AC                51     ES      BIT     0A8H.4
  00C1                52     IEX2    BIT     0C0H.1
  00C2                53     IEX3    BIT     0C0H.2
  0098                54     RI      BIT     098H.0
  00C3                55     IEX4    BIT     0C0H.3
  00C4                56     IEX5    BIT     0C0H.4
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     2

  00C5                57     IEX6    BIT     0C0H.5
  0091                58     CLK_DIV DATA    091H
  0081                59     SP      DATA    081H
  00A3                60     P1CMPA  DATA    0A3H
  00C3                61     P2CMPA  DATA    0C3H
  00A5                62     P1CMPB  DATA    0A5H
  00D3                63     P3CMPA  DATA    0D3H
  00C5                64     P2CMPB  DATA    0C5H
  00E3                65     P4CMPA  DATA    0E3H
  00D5                66     P3CMPB  DATA    0D5H
  00AC                67     BSHI    DATA    0ACH
  00E5                68     P4CMPB  DATA    0E5H
  00A2                69     P1TBPRD_H       DATA    0A2H
  00C2                70     P2TBPRD_H       DATA    0C2H
  00D2                71     P3TBPRD_H       DATA    0D2H
  00E2                72     P4TBPRD_H       DATA    0E2H
  00A1                73     P1TBPRD_L       DATA    0A1H
  00C1                74     P2TBPRD_L       DATA    0C1H
  00BC                75     BSHO    DATA    0BCH
  00D1                76     P3TBPRD_L       DATA    0D1H
  00E1                77     P4TBPRD_L       DATA    0E1H
  0095                78     BREAKH  DATA    095H
  00BA                79     S0RELH  DATA    0BAH
  0080                80     P00     BIT     080H.0
  0099                81     SBUF    DATA    099H
  00BB                82     S1RELH  DATA    0BBH
  0090                83     P10     BIT     090H.0
  0087                84     PCON    DATA    087H
  0081                85     P01     BIT     080H.1
  00A0                86     P20     BIT     0A0H.0
  0091                87     P11     BIT     090H.1
  0082                88     P02     BIT     080H.2
  00B0                89     P30     BIT     0B0H.0
  00A1                90     P21     BIT     0A0H.1
  0092                91     P12     BIT     090H.2
  0083                92     P03     BIT     080H.3
  0094                93     BREAKL  DATA    094H
  00B1                94     P31     BIT     0B0H.1
  00AA                95     S0RELL  DATA    0AAH
  00A2                96     P22     BIT     0A0H.2
  0093                97     P13     BIT     090H.3
  0084                98     P04     BIT     080H.4
  00B2                99     P32     BIT     0B0H.2
  00A3               100     P23     BIT     0A0H.3
  009D               101     S1RELL  DATA    09DH
  0094               102     P14     BIT     090H.4
  0089               103     TMOD    DATA    089H
  0088               104     TCON    DATA    088H
  0085               105     P05     BIT     080H.5
  00B3               106     P33     BIT     0B0H.3
  00A4               107     P24     BIT     0A0H.4
  0095               108     P15     BIT     090H.5
  0086               109     P06     BIT     080H.6
  00B4               110     P34     BIT     0B0H.4
  00AC               111     BSHI_0  DATA    0ACH
  00A5               112     P25     BIT     0A0H.5
  0096               113     P16     BIT     090H.6
  0087               114     P07     BIT     080H.7
  00B5               115     P35     BIT     0B0H.5
  00AD               116     BSHI_1  DATA    0ADH
  00A6               117     P26     BIT     0A0H.6
  0097               118     P17     BIT     090H.7
  00B6               119     P36     BIT     0B0H.6
  00AE               120     BSHI_2  DATA    0AEH
  00A7               121     P27     BIT     0A0H.7
  00B7               122     P37     BIT     0B0H.7
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     3

  00AF               123     BSHI_3  DATA    0AFH
  00BC               124     BSHO_0  DATA    0BCH
  00BD               125     BSHO_1  DATA    0BDH
  0089               126     IE0     BIT     088H.1
  00BE               127     BSHO_2  DATA    0BEH
  008B               128     IE1     BIT     088H.3
  00BF               129     BSHO_3  DATA    0BFH
  00F0               130     B       DATA    0F0H
  00E9               131     MD0     DATA    0E9H
  00EA               132     MD1     DATA    0EAH
  00AB               133     BSHCTL  DATA    0ABH
  00EB               134     MD2     DATA    0EBH
  00BE               135     SWDT    BIT     0B8H.6
  00A7               136     P1AQSFRC        DATA    0A7H
  00EC               137     MD3     DATA    0ECH
  00C7               138     P2AQSFRC        DATA    0C7H
  00ED               139     MD4     DATA    0EDH
  00D7               140     P3AQSFRC        DATA    0D7H
  00EE               141     MD5     DATA    0EEH
  00E7               142     P4AQSFRC        DATA    0E7H
  00E0               143     ACC     DATA    0E0H
  00AC               144     ES0     BIT     0A8H.4
  00A9               145     IP0     DATA    0A9H
  00A9               146     ET0     BIT     0A8H.1
  0093               147     BPCTRL  DATA    093H
  00B9               148     IP1     DATA    0B9H
  00AB               149     ET1     BIT     0A8H.3
  008D               150     TF0     BIT     088H.5
  0098               151     RI0     BIT     098H.0
  008F               152     TF1     BIT     088H.7
  00A4               153     P1CMPA_H        DATA    0A4H
  008C               154     TH0     DATA    08CH
  00C4               155     P2CMPA_H        DATA    0C4H
  00A6               156     P1CMPB_H        DATA    0A6H
  00A8               157     EX0     BIT     0A8H.0
  0099               158     TI0     BIT     098H.1
  008D               159     TH1     DATA    08DH
  0088               160     IT0     BIT     088H.0
  00D4               161     P3CMPA_H        DATA    0D4H
  00C6               162     P2CMPB_H        DATA    0C6H
  00AA               163     EX1     BIT     0A8H.2
  008A               164     IT1     BIT     088H.2
  00E4               165     P4CMPA_H        DATA    0E4H
  00D6               166     P3CMPB_H        DATA    0D6H
  00B9               167     EX2     BIT     0B8H.1
  00E6               168     P4CMPB_H        DATA    0E6H
  00A3               169     P1CMPA_L        DATA    0A3H
  00BA               170     EX3     BIT     0B8H.2
  009F               171     SM0     BIT     098H.7
  0097               172     POWER_CON       DATA    097H
  008A               173     TL0     DATA    08AH
  00C3               174     P2CMPA_L        DATA    0C3H
  00A5               175     P1CMPB_L        DATA    0A5H
  00BB               176     EX4     BIT     0B8H.3
  009E               177     SM1     BIT     098H.6
  008B               178     TL1     DATA    08BH
  00D3               179     P3CMPA_L        DATA    0D3H
  00C5               180     P2CMPB_L        DATA    0C5H
  00BC               181     EX5     BIT     0B8H.4
  00AF               182     EAL     BIT     0A8H.7
  00E3               183     P4CMPA_L        DATA    0E3H
  00D5               184     P3CMPB_L        DATA    0D5H
  00BD               185     EX6     BIT     0B8H.5
  00E5               186     P4CMPB_L        DATA    0E5H
  0086               187     WDTREL  DATA    086H
  008C               188     TR0     BIT     088H.4
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     4

  008E               189     TR1     BIT     088H.6
  00F9               190     INT_REG1        DATA    0F9H
  0083               191     DPH     DATA    083H
  00FA               192     INT_REG2        DATA    0FAH
  00FD               193     INT_REG3        DATA    0FDH
  00FE               194     INT_REG4        DATA    0FEH
  0082               195     DPL     DATA    082H
  0099               196     S0BUF   DATA    099H
  009C               197     S1BUF   DATA    09CH
  0098               198     S0CON   DATA    098H
  009B               199     S1CON   DATA    09BH
  00C8               200     T2CON   DATA    0C8H
  0092               201     DPS     DATA    092H
  00AE               202     WDT     BIT     0A8H.6
  008E               203     CKCON   DATA    08EH
  00EF               204     ARCON   DATA    0EFH
  00B5               205     P1ETFLG DATA    0B5H
  00F8               206     SRAM_CON        DATA    0F8H
  00CD               207     P2ETFLG DATA    0CDH
  00DD               208     P3ETFLG DATA    0DDH
  00B7               209     P1ETFRC DATA    0B7H
  00F5               210     P4ETFLG DATA    0F5H
  00CF               211     P2ETFRC DATA    0CFH
  00E8               212     MEM_CONFIG      DATA    0E8H
  00DF               213     P3ETFRC DATA    0DFH
  00F7               214     P4ETFRC DATA    0F7H
  00D0               215     PSW     DATA    0D0H
  00D8               216     WDCON   DATA    0D8H
  00C0               217     IRCON   DATA    0C0H
  009A               218     RB80    BIT     098H.2
  00B6               219     P1ETCLR DATA    0B6H
                     220     ?PR?__IQ15sin?IQMATHLIB                  SEGMENT CODE 
                     221     ?DT?__IQ15sin?IQMATHLIB                  SEGMENT DATA 
                     222     ?PR?__IQ15sqrt?IQMATHLIB                 SEGMENT CODE 
                     223     ?DT?__IQ15sqrt?IQMATHLIB                 SEGMENT DATA 
                     224     ?PR?__IQ15atan2?IQMATHLIB                SEGMENT CODE 
                     225     ?DT?__IQ15atan2?IQMATHLIB                SEGMENT DATA 
                     226     ?PR?__IQ15mag?IQMATHLIB                  SEGMENT CODE 
                     227     ?DT?__IQ15mag?IQMATHLIB                  SEGMENT DATA 
                     228     ?DT?IQMATHLIB        SEGMENT DATA 
                     229             EXTRN   CODE (__IQabs)
                     230             EXTRN   CODE (_Normalize)
                     231             EXTRN   CODE (_BarrelShift)
                     232             EXTRN   DATA (?_BarrelShift?BYTE)
                     233             EXTRN   CODE (?C?SLCMP)
                     234             EXTRN   CODE (?C?LMUL)
                     235             EXTRN   CODE (?C?LNEG)
                     236             EXTRN   CODE (?C?SCDIV)
                     237             EXTRN   CODE (?C?SLDIV)
                     238             PUBLIC  Z
                     239             PUBLIC  Y
                     240             PUBLIC  X
                     241             PUBLIC  dat
                     242             PUBLIC  index
                     243             PUBLIC  ?__IQ15mag?BYTE
                     244             PUBLIC  __IQ15mag
                     245             PUBLIC  ?__IQ15atan2?BYTE
                     246             PUBLIC  __IQ15atan2
                     247             PUBLIC  __IQ15sqrt
                     248             PUBLIC  __IQ15sin
                     249     
----                 250             RSEG  ?DT?__IQ15mag?IQMATHLIB
0000                 251     ?__IQ15mag?BYTE:
0000                 252               A?344:   DS   4
0004                 253             ORG  4
0004                 254               B?345:   DS   4
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     5

                     255     
----                 256             RSEG  ?DT?__IQ15sin?IQMATHLIB
0000                 257     ?__IQ15sin?BYTE:
0000                 258               A?040:   DS   4
                     259     
----                 260             RSEG  ?DT?__IQ15sqrt?IQMATHLIB
0000                 261     ?__IQ15sqrt?BYTE:
0000                 262               A?141:   DS   4
                     263     
----                 264             RSEG  ?DT?__IQ15atan2?IQMATHLIB
0000                 265     ?__IQ15atan2?BYTE:
0000                 266               A?242:   DS   4
0004                 267             ORG  4
0004                 268               B?243:   DS   4
                     269     
----                 270             RSEG  ?DT?IQMATHLIB
0000                 271               index:   DS   1
0001                 272                 dat:   DS   4
0005                 273                   X:   DS   4
0009                 274                   Y:   DS   4
000D                 275                   Z:   DS   4
                     276     ; /*
                     277     ;  * lib.c
                     278     ;  *    Copy Right (c) of JE
                     279     ;  *  Created on: 
                     280     ;  *      18 Sep 2018
                     281     ;  *  Author: 
                     282     ;  *      Ken
                     283     ;  *  Last Modified: 
                     284     ;  *     
                     285     ;  *  Description: 
                     286     ;  *      lib for JE8MCU
                     287     ;  *  History:
                     288     ;  *      ver 0.1 created by ken on 12 August 2016 
                     289     ;  *
                     290     ;  *            Use math table for fuctions of 
                     291     ;  *                            sin, cos, inverse, sqrt, artan
                     292     ;  *                            Park transform and Clark transform
                     293     ;  *
                     294     ;  *
                     295     ;  */
                     296     ;  
                     297     ;  /***************************************************
                     298     ;  * Includes
                     299     ;  */
                     300     ; 
                     301     ; #include <intrins.h>   
                     302     ; #include <absacc.h>
                     303     ; #include "register.h"
                     304     ; #include "IQmathLib.h"
                     305     ; 
                     306     ; 
                     307     ; 
                     308     ;  Long_Data dat;
                     309     ;  _iq data X,Y,Z;
                     310     ;  S8  data index;
                     311     ; 
                     312     ; 
                     313     ; 
                     314     ; 
                     315     ; 
                     316     ; 
                     317     ; 
                     318     ; 
                     319     ; 
                     320     ; 
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     6

                     321     ; //_iq Normalize(_iq A)              //normalize only work for positive value. it return e
                             rror if the MD3_7=1 
                     322     ; //{
                     323     ; 
                     324     ; 
                     325     ; //    
                     326     ; 
                     327     ; // dat.Ldata =A;
                     328     ; // MD0 = dat.ss1.Byte0;
                     329     ; // MD1 = dat.ss1.Byte1;
                     330     ; // MD2 = dat.ss1.Byte2;
                     331     ; // MD3 = dat.ss1.Byte3;
                     332     ; //    
                     333     ; 
                     334     ; //    
                     335     ; // ARCON = 0x00 ; // Start Normalizing
                     336     ; // while(MD3_7==0 ); //check MDU finish flag
                     337     ; //    dat.ss1.Byte0=MD0;
                     338     ; //    dat.ss1.Byte1=MD1;
                     339     ; //    dat.ss1.Byte2=MD2;
                     340     ; //    dat.ss1.Byte3=MD3;
                     341     ; // 
                     342     ; //     return dat.Ldata ;
                     343     ; //}
                     344     ; 
                     345     ; 
                     346     ; /*
                     347     ;  * @fn                sin32
                     348     ;  *
                     349     ;  * @brief     sin32
                     350     ;  * 
                     351     ; * @param      none
                     352     ;  * _IQsin(X) ,  =sin(X), X is in degree
                     353     ; 
                     354     ;  *
                     355     ;  * @return    value in IQ
                     356     ;  */
                     357     ; 
                     358     ; 
                     359     ; 
                     360     ; 
                     361     ; 
                     362     ; 
                     363     ; 
                     364     ; _iq _IQsin(_iq A)
                     365     
----                 366             RSEG  ?PR?__IQ15sin?IQMATHLIB
0000                 367     __IQ15sin:
                     368             USING   0
                     369                             ; SOURCE LINE # 89
0000 8F00     F      370             MOV     A?040+03H,R7
0002 8E00     F      371             MOV     A?040+02H,R6
0004 8D00     F      372             MOV     A?040+01H,R5
0006 8C00     F      373             MOV     A?040,R4
                     374     ; {
                     375                             ; SOURCE LINE # 90
                     376     ; 
                     377     ;       X=_IQabs(A);
                     378                             ; SOURCE LINE # 92
0008 AF00     F      379             MOV     R7,A?040+03H
000A AE00     F      380             MOV     R6,A?040+02H
000C AD00     F      381             MOV     R5,A?040+01H
000E AC00     F      382             MOV     R4,A?040
0010 120000   F      383             LCALL   __IQabs
0013 8F00     F      384             MOV     X+03H,R7
0015 8E00     F      385             MOV     X+02H,R6
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     7

0017 8D00     F      386             MOV     X+01H,R5
0019 8C00     F      387             MOV     X,R4
001B                 388     ?C0001:
                     389     ;       
                     390     ;               
                     391     ;       //limtit the search anlge to <360)
                     392     ;       
                     393     ;   while (X>=_IQ(360.0))
                     394                             ; SOURCE LINE # 97
001B 7F00            395             MOV     R7,#00H
001D 7E00            396             MOV     R6,#00H
001F 7DB4            397             MOV     R5,#0B4H
0021 7C00            398             MOV     R4,#00H
0023 AB00     F      399             MOV     R3,X+03H
0025 AA00     F      400             MOV     R2,X+02H
0027 A900     F      401             MOV     R1,X+01H
0029 A800     F      402             MOV     R0,X
002B C3              403             CLR     C
002C 120000   F      404             LCALL   ?C?SLCMP
002F 401B            405             JC      ?C0002
                     406     ;                       {
                     407                             ; SOURCE LINE # 98
                     408     ;                               X-=_IQ(360.0);
                     409                             ; SOURCE LINE # 99
0031 C3              410             CLR     C
0032 E500     F      411             MOV     A,X+03H
0034 9400            412             SUBB    A,#00H
0036 F500     F      413             MOV     X+03H,A
0038 E500     F      414             MOV     A,X+02H
003A 9400            415             SUBB    A,#00H
003C F500     F      416             MOV     X+02H,A
003E E500     F      417             MOV     A,X+01H
0040 94B4            418             SUBB    A,#0B4H
0042 F500     F      419             MOV     X+01H,A
0044 E500     F      420             MOV     A,X
0046 9400            421             SUBB    A,#00H
0048 F500     F      422             MOV     X,A
                     423     ;                       }
                     424                             ; SOURCE LINE # 100
004A 80CF            425             SJMP    ?C0001
004C                 426     ?C0002:
                     427     ;       
                     428     ;       
                     429     ;       // convert angle to data in sin table, angle =angle/360 * 512  or  =angle *64/45
                     430     ;                       
                     431     ;       X=_IQmpy(X,_IQ(1.422222));
                     432                             ; SOURCE LINE # 105
004C 750028   F      433             MOV     ?_BarrelShift?BYTE+04H,#028H
004F 7F0B            434             MOV     R7,#0BH
0051 7EB6            435             MOV     R6,#0B6H
0053 7D00            436             MOV     R5,#00H
0055 7C00            437             MOV     R4,#00H
0057 120000   F      438             LCALL   _BarrelShift
005A C004            439             PUSH    AR4
005C C005            440             PUSH    AR5
005E C006            441             PUSH    AR6
0060 C007            442             PUSH    AR7
0062 AF00     F      443             MOV     R7,X+03H
0064 AE00     F      444             MOV     R6,X+02H
0066 AD00     F      445             MOV     R5,X+01H
0068 AC00     F      446             MOV     R4,X
006A 750027   F      447             MOV     ?_BarrelShift?BYTE+04H,#027H
006D 120000   F      448             LCALL   _BarrelShift
0070 A804            449             MOV     R0,AR4
0072 A905            450             MOV     R1,AR5
0074 AA06            451             MOV     R2,AR6
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     8

0076 AB07            452             MOV     R3,AR7
0078 D007            453             POP     AR7
007A D006            454             POP     AR6
007C D005            455             POP     AR5
007E D004            456             POP     AR4
0080 120000   F      457             LCALL   ?C?LMUL
0083 8F00     F      458             MOV     X+03H,R7
0085 8E00     F      459             MOV     X+02H,R6
0087 8D00     F      460             MOV     X+01H,R5
0089 8C00     F      461             MOV     X,R4
                     462     ;   X=_IQint(X);          //convert to integer
                     463                             ; SOURCE LINE # 106
008B AF00     F      464             MOV     R7,X+03H
008D AE00     F      465             MOV     R6,X+02H
008F AD00     F      466             MOV     R5,X+01H
0091 AC00     F      467             MOV     R4,X
0093 75002F   F      468             MOV     ?_BarrelShift?BYTE+04H,#02FH
0096 120000   F      469             LCALL   _BarrelShift
0099 8F00     F      470             MOV     X+03H,R7
009B 8E00     F      471             MOV     X+02H,R6
009D 8D00     F      472             MOV     X+01H,R5
009F 8C00     F      473             MOV     X,R4
                     474     ;   Z=XWORD[X+sin_table];
                     475                             ; SOURCE LINE # 107
00A1 7F02            476             MOV     R7,#02H
00A3 7E00            477             MOV     R6,#00H
00A5 7D00            478             MOV     R5,#00H
00A7 7C00            479             MOV     R4,#00H
00A9 AB00     F      480             MOV     R3,X+03H
00AB AA00     F      481             MOV     R2,X+02H
00AD A900     F      482             MOV     R1,X+01H
00AF A800     F      483             MOV     R0,X
00B1 120000   F      484             LCALL   ?C?LMUL
00B4 8F82            485             MOV     DPL,R7
00B6 8E83            486             MOV     DPH,R6
00B8 E0              487             MOVX    A,@DPTR
00B9 FE              488             MOV     R6,A
00BA A3              489             INC     DPTR
00BB E0              490             MOVX    A,@DPTR
00BC FF              491             MOV     R7,A
00BD E4              492             CLR     A
00BE FC              493             MOV     R4,A
00BF FD              494             MOV     R5,A
00C0 8F00     F      495             MOV     Z+03H,R7
00C2 8E00     F      496             MOV     Z+02H,R6
00C4 8D00     F      497             MOV     Z+01H,R5
00C6 8C00     F      498             MOV     Z,R4
                     499     ;       Z=BarrelShift(Z,(LL_shift+16));                                                    
                                                          //sin table is in Q15 format, it need to convert to Q31 first by shifting 16 bit to left
                     500                             ; SOURCE LINE # 108
00C8 AF00     F      501             MOV     R7,Z+03H
00CA AE00     F      502             MOV     R6,Z+02H
00CC AD00     F      503             MOV     R5,Z+01H
00CE AC00     F      504             MOV     R4,Z
00D0 750090   F      505             MOV     ?_BarrelShift?BYTE+04H,#090H
00D3 120000   F      506             LCALL   _BarrelShift
00D6 8F00     F      507             MOV     Z+03H,R7
00D8 8E00     F      508             MOV     Z+02H,R6
00DA 8D00     F      509             MOV     Z+01H,R5
00DC 8C00     F      510             MOV     Z,R4
                     511     ;       Z=BarrelShift(Z, (RA_shift+ (30 - GLOBAL_Q)));          //convert Q31 to global Q f
                             ormat
                     512                             ; SOURCE LINE # 109
00DE AF00     F      513             MOV     R7,Z+03H
00E0 AE00     F      514             MOV     R6,Z+02H
00E2 AD00     F      515             MOV     R5,Z+01H
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE     9

00E4 AC00     F      516             MOV     R4,Z
00E6 75002F   F      517             MOV     ?_BarrelShift?BYTE+04H,#02FH
00E9 120000   F      518             LCALL   _BarrelShift
00EC 8F00     F      519             MOV     Z+03H,R7
00EE 8E00     F      520             MOV     Z+02H,R6
00F0 8D00     F      521             MOV     Z+01H,R5
00F2 8C00     F      522             MOV     Z,R4
                     523     ; 
                     524     ;       if (A<0) Z=-(Z);
                     525                             ; SOURCE LINE # 111
00F4 7F00            526             MOV     R7,#00H
00F6 7E00            527             MOV     R6,#00H
00F8 7D00            528             MOV     R5,#00H
00FA 7C00            529             MOV     R4,#00H
00FC AB00     F      530             MOV     R3,A?040+03H
00FE AA00     F      531             MOV     R2,A?040+02H
0100 A900     F      532             MOV     R1,A?040+01H
0102 A800     F      533             MOV     R0,A?040
0104 C3              534             CLR     C
0105 120000   F      535             LCALL   ?C?SLCMP
0108 5013            536             JNC     ?C0003
010A AF00     F      537             MOV     R7,Z+03H
010C AE00     F      538             MOV     R6,Z+02H
010E AD00     F      539             MOV     R5,Z+01H
0110 AC00     F      540             MOV     R4,Z
0112 120000   F      541             LCALL   ?C?LNEG
0115 8F00     F      542             MOV     Z+03H,R7
0117 8E00     F      543             MOV     Z+02H,R6
0119 8D00     F      544             MOV     Z+01H,R5
011B 8C00     F      545             MOV     Z,R4
011D                 546     ?C0003:
                     547     ; 
                     548     ; return Z ;
                     549                             ; SOURCE LINE # 113
011D AF00     F      550             MOV     R7,Z+03H
011F AE00     F      551             MOV     R6,Z+02H
0121 AD00     F      552             MOV     R5,Z+01H
0123 AC00     F      553             MOV     R4,Z
                     554     ;       
                     555     ; }
                     556                             ; SOURCE LINE # 115
0125                 557     ?C0004:
0125 22              558             RET     
                     559     ; END OF __IQ15sin
                     560     
                     561     ; 
                     562     ; 
                     563     ; 
                     564     ; 
                     565     ; 
                     566     ; 
                     567     ; 
                     568     ; 
                     569     ; 
                     570     ; /*
                     571     ;  * @fn                sqrt32
                     572     ;  *
                     573     ;  * @brief     sqrt32
                     574     ;  * 
                     575     ;  * @param     none
                     576     ;  * _IQsqrt(X) ,  sqrt(X)
                     577     ; 
                     578     ;  *
                     579     ;  * @return    sqrt value in IQ
                     580     ;  */
                     581     ; 
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    10

                     582     ; 
                     583     ; 
                     584     ; 
                     585     ; 
                     586     ; 
                     587     ; _iq _IQsqrt(_iq A)
                     588     
----                 589             RSEG  ?PR?__IQ15sqrt?IQMATHLIB
0000                 590     __IQ15sqrt:
                     591             USING   0
                     592                             ; SOURCE LINE # 142
0000 8F00     F      593             MOV     A?141+03H,R7
0002 8E00     F      594             MOV     A?141+02H,R6
0004 8D00     F      595             MOV     A?141+01H,R5
0006 8C00     F      596             MOV     A?141,R4
                     597     ; 
                     598     ; {
                     599                             ; SOURCE LINE # 144
                     600     ; 
                     601     ;       if (A<0) return 0;
                     602                             ; SOURCE LINE # 146
0008 7F00            603             MOV     R7,#00H
000A 7E00            604             MOV     R6,#00H
000C 7D00            605             MOV     R5,#00H
000E 7C00            606             MOV     R4,#00H
0010 AB00     F      607             MOV     R3,A?141+03H
0012 AA00     F      608             MOV     R2,A?141+02H
0014 A900     F      609             MOV     R1,A?141+01H
0016 A800     F      610             MOV     R0,A?141
0018 C3              611             CLR     C
0019 120000   F      612             LCALL   ?C?SLCMP
001C 5009            613             JNC     ?C0005
001E 7F00            614             MOV     R7,#00H
0020 7E00            615             MOV     R6,#00H
0022 7D00            616             MOV     R5,#00H
0024 7C00            617             MOV     R4,#00H
0026 22              618             RET     
0027                 619     ?C0005:
                     620     ; 
                     621     ;       X=Normalize(A);   //convert to Q30 format
                     622                             ; SOURCE LINE # 148
0027 AF00     F      623             MOV     R7,A?141+03H
0029 AE00     F      624             MOV     R6,A?141+02H
002B AD00     F      625             MOV     R5,A?141+01H
002D AC00     F      626             MOV     R4,A?141
002F 120000   F      627             LCALL   _Normalize
0032 8F00     F      628             MOV     X+03H,R7
0034 8E00     F      629             MOV     X+02H,R6
0036 8D00     F      630             MOV     X+01H,R5
0038 8C00     F      631             MOV     X,R4
                     632     ;       index=(31-GLOBAL_Q-ARCON);
                     633                             ; SOURCE LINE # 149
003A C3              634             CLR     C
003B 7410            635             MOV     A,#010H
003D 95EF            636             SUBB    A,ARCON
003F F500     F      637             MOV     index,A
                     638     ;       
                     639     ;       if (index %2==0)                //check if the power is even or  odd value      
                     640                             ; SOURCE LINE # 151
0041 E500     F      641             MOV     A,index
0043 75F002          642             MOV     B,#02H
0046 120000   F      643             LCALL   ?C?SCDIV
0049 AFF0            644             MOV     R7,B
004B EF              645             MOV     A,R7
004C 7068            646             JNZ     ?C0007
                     647     ;       {
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    11

                     648                             ; SOURCE LINE # 152
                     649     ;       X &=0x7fffffff;
                     650                             ; SOURCE LINE # 153
004E E500     F      651             MOV     A,X+03H
0050 54FF            652             ANL     A,#0FFH
0052 F500     F      653             MOV     X+03H,A
0054 E500     F      654             MOV     A,X+02H
0056 54FF            655             ANL     A,#0FFH
0058 F500     F      656             MOV     X+02H,A
005A E500     F      657             MOV     A,X+01H
005C 54FF            658             ANL     A,#0FFH
005E F500     F      659             MOV     X+01H,A
0060 E500     F      660             MOV     A,X
0062 547F            661             ANL     A,#07FH
0064 F500     F      662             MOV     X,A
                     663     ;       X=BarrelShift(X, (RA_shift+23))+128;    
                     664                             ; SOURCE LINE # 154
0066 AF00     F      665             MOV     R7,X+03H
0068 AE00     F      666             MOV     R6,X+02H
006A AD00     F      667             MOV     R5,X+01H
006C AC00     F      668             MOV     R4,X
006E 750037   F      669             MOV     ?_BarrelShift?BYTE+04H,#037H
0071 120000   F      670             LCALL   _BarrelShift
0074 EF              671             MOV     A,R7
0075 2480            672             ADD     A,#080H
0077 F500     F      673             MOV     X+03H,A
0079 EE              674             MOV     A,R6
007A 3400            675             ADDC    A,#00H
007C F500     F      676             MOV     X+02H,A
007E ED              677             MOV     A,R5
007F 3400            678             ADDC    A,#00H
0081 F500     F      679             MOV     X+01H,A
0083 EC              680             MOV     A,R4
0084 3400            681             ADDC    A,#00H
0086 F500     F      682             MOV     X,A
                     683     ;               
                     684     ;               Z=XWORD[X+sqrt_table];
                     685                             ; SOURCE LINE # 156
0088 7F02            686             MOV     R7,#02H
008A 7E00            687             MOV     R6,#00H
008C 7D00            688             MOV     R5,#00H
008E 7C00            689             MOV     R4,#00H
0090 AB00     F      690             MOV     R3,X+03H
0092 AA00     F      691             MOV     R2,X+02H
0094 A900     F      692             MOV     R1,X+01H
0096 A800     F      693             MOV     R0,X
0098 120000   F      694             LCALL   ?C?LMUL
009B E4              695             CLR     A
009C 2F              696             ADD     A,R7
009D F582            697             MOV     DPL,A
009F 7408            698             MOV     A,#08H
00A1 3E              699             ADDC    A,R6
00A2 F583            700             MOV     DPH,A
00A4 E0              701             MOVX    A,@DPTR
00A5 FE              702             MOV     R6,A
00A6 A3              703             INC     DPTR
00A7 E0              704             MOVX    A,@DPTR
00A8 FF              705             MOV     R7,A
00A9 E4              706             CLR     A
00AA FC              707             MOV     R4,A
00AB FD              708             MOV     R5,A
00AC 8F00     F      709             MOV     Z+03H,R7
00AE 8E00     F      710             MOV     Z+02H,R6
00B0 8D00     F      711             MOV     Z+01H,R5
00B2 8C00     F      712             MOV     Z,R4
                     713     ;       }
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    12

                     714                             ; SOURCE LINE # 157
00B4 805C            715             SJMP    ?C0008
00B6                 716     ?C0007:
                     717     ;       else
                     718     ;       {
                     719                             ; SOURCE LINE # 159
                     720     ;     index++;                             //if the power is odd value , divide t by 2
                     721                             ; SOURCE LINE # 160
00B6 0500     F      722             INC     index
                     723     ;       
                     724     ;               X =BarrelShift(X,(RA_shift+24));             //square root in value is divi
                             ded by 2 
                     725                             ; SOURCE LINE # 162
00B8 AF00     F      726             MOV     R7,X+03H
00BA AE00     F      727             MOV     R6,X+02H
00BC AD00     F      728             MOV     R5,X+01H
00BE AC00     F      729             MOV     R4,X
00C0 750038   F      730             MOV     ?_BarrelShift?BYTE+04H,#038H
00C3 120000   F      731             LCALL   _BarrelShift
00C6 8F00     F      732             MOV     X+03H,R7
00C8 8E00     F      733             MOV     X+02H,R6
00CA 8D00     F      734             MOV     X+01H,R5
00CC 8C00     F      735             MOV     X,R4
                     736     ;         X &=0x0000007f;
                     737                             ; SOURCE LINE # 163
00CE E500     F      738             MOV     A,X+03H
00D0 547F            739             ANL     A,#07FH
00D2 F500     F      740             MOV     X+03H,A
00D4 E500     F      741             MOV     A,X+02H
00D6 5400            742             ANL     A,#00H
00D8 F500     F      743             MOV     X+02H,A
00DA E500     F      744             MOV     A,X+01H
00DC 5400            745             ANL     A,#00H
00DE F500     F      746             MOV     X+01H,A
00E0 E500     F      747             MOV     A,X
00E2 5400            748             ANL     A,#00H
00E4 F500     F      749             MOV     X,A
                     750     ;               Z=XWORD[X+sqrt_table];
                     751                             ; SOURCE LINE # 164
00E6 7F02            752             MOV     R7,#02H
00E8 7E00            753             MOV     R6,#00H
00EA 7D00            754             MOV     R5,#00H
00EC 7C00            755             MOV     R4,#00H
00EE AB00     F      756             MOV     R3,X+03H
00F0 AA00     F      757             MOV     R2,X+02H
00F2 A900     F      758             MOV     R1,X+01H
00F4 A800     F      759             MOV     R0,X
00F6 120000   F      760             LCALL   ?C?LMUL
00F9 E4              761             CLR     A
00FA 2F              762             ADD     A,R7
00FB F582            763             MOV     DPL,A
00FD 7408            764             MOV     A,#08H
00FF 3E              765             ADDC    A,R6
0100 F583            766             MOV     DPH,A
0102 E0              767             MOVX    A,@DPTR
0103 FE              768             MOV     R6,A
0104 A3              769             INC     DPTR
0105 E0              770             MOVX    A,@DPTR
0106 FF              771             MOV     R7,A
0107 E4              772             CLR     A
0108 FC              773             MOV     R4,A
0109 FD              774             MOV     R5,A
010A 8F00     F      775             MOV     Z+03H,R7
010C 8E00     F      776             MOV     Z+02H,R6
010E 8D00     F      777             MOV     Z+01H,R5
0110 8C00     F      778             MOV     Z,R4
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    13

                     779     ;       }
                     780                             ; SOURCE LINE # 165
0112                 781     ?C0008:
                     782     ;       Z=BarrelShift(Z,(LL_shift+16));                                                    
                                                          //sqrt table is in Q15 format, it need to convert to Q31 first by shifting 16 bit to left
                     783                             ; SOURCE LINE # 166
0112 AF00     F      784             MOV     R7,Z+03H
0114 AE00     F      785             MOV     R6,Z+02H
0116 AD00     F      786             MOV     R5,Z+01H
0118 AC00     F      787             MOV     R4,Z
011A 750090   F      788             MOV     ?_BarrelShift?BYTE+04H,#090H
011D 120000   F      789             LCALL   _BarrelShift
0120 8F00     F      790             MOV     Z+03H,R7
0122 8E00     F      791             MOV     Z+02H,R6
0124 8D00     F      792             MOV     Z+01H,R5
0126 8C00     F      793             MOV     Z,R4
                     794     ;       Z=BarrelShift(Z, (RA_shift+ (30 - GLOBAL_Q)));          //convert Q31 to global Q f
                             ormat
                     795                             ; SOURCE LINE # 167
0128 AF00     F      796             MOV     R7,Z+03H
012A AE00     F      797             MOV     R6,Z+02H
012C AD00     F      798             MOV     R5,Z+01H
012E AC00     F      799             MOV     R4,Z
0130 75002F   F      800             MOV     ?_BarrelShift?BYTE+04H,#02FH
0133 120000   F      801             LCALL   _BarrelShift
0136 8F00     F      802             MOV     Z+03H,R7
0138 8E00     F      803             MOV     Z+02H,R6
013A 8D00     F      804             MOV     Z+01H,R5
013C 8C00     F      805             MOV     Z,R4
                     806     ;       
                     807     ; 
                     808     ;       
                     809     ;       if (index>=0)
                     810                             ; SOURCE LINE # 171
013E C3              811             CLR     C
013F E500     F      812             MOV     A,index
0141 6480            813             XRL     A,#080H
0143 9480            814             SUBB    A,#080H
0145 4020            815             JC      ?C0009
                     816     ;       Z=BarrelShift(Z, (LA_shift+(index/2)));
                     817                             ; SOURCE LINE # 172
0147 AF00     F      818             MOV     R7,Z+03H
0149 AE00     F      819             MOV     R6,Z+02H
014B AD00     F      820             MOV     R5,Z+01H
014D AC00     F      821             MOV     R4,Z
014F E500     F      822             MOV     A,index
0151 A2E7            823             MOV     C,ACC.7
0153 13              824             RRC     A
0154 FB              825             MOV     R3,A
0155 EB              826             MOV     A,R3
0156 24A0            827             ADD     A,#0A0H
0158 F500     F      828             MOV     ?_BarrelShift?BYTE+04H,A
015A 120000   F      829             LCALL   _BarrelShift
015D 8F00     F      830             MOV     Z+03H,R7
015F 8E00     F      831             MOV     Z+02H,R6
0161 8D00     F      832             MOV     Z+01H,R5
0163 8C00     F      833             MOV     Z,R4
0165 8022            834             SJMP    ?C0010
0167                 835     ?C0009:
                     836     ;       else Z=BarrelShift(Z,(RA_shift+((-index)/2)));
                     837                             ; SOURCE LINE # 173
0167 AF00     F      838             MOV     R7,Z+03H
0169 AE00     F      839             MOV     R6,Z+02H
016B AD00     F      840             MOV     R5,Z+01H
016D AC00     F      841             MOV     R4,Z
016F E500     F      842             MOV     A,index
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    14

0171 F4              843             CPL     A
0172 04              844             INC     A
0173 FB              845             MOV     R3,A
0174 EB              846             MOV     A,R3
0175 A2E7            847             MOV     C,ACC.7
0177 13              848             RRC     A
0178 FB              849             MOV     R3,A
0179 EB              850             MOV     A,R3
017A 2420            851             ADD     A,#020H
017C F500     F      852             MOV     ?_BarrelShift?BYTE+04H,A
017E 120000   F      853             LCALL   _BarrelShift
0181 8F00     F      854             MOV     Z+03H,R7
0183 8E00     F      855             MOV     Z+02H,R6
0185 8D00     F      856             MOV     Z+01H,R5
0187 8C00     F      857             MOV     Z,R4
0189                 858     ?C0010:
                     859     ;       
                     860     ; return  Z;
                     861                             ; SOURCE LINE # 175
0189 AF00     F      862             MOV     R7,Z+03H
018B AE00     F      863             MOV     R6,Z+02H
018D AD00     F      864             MOV     R5,Z+01H
018F AC00     F      865             MOV     R4,Z
                     866     ; }
                     867                             ; SOURCE LINE # 176
0191                 868     ?C0006:
0191 22              869             RET     
                     870     ; END OF __IQ15sqrt
                     871     
                     872     ; 
                     873     ; 
                     874     ; /*
                     875     ;  * @fn                atan32
                     876     ;  *
                     877     ;  * @brief     atan32
                     878     ;  * 
                     879     ;  * @param     none
                     880     ;  * _IQatan2(Y,X) ,  atan2(Y/X)
                     881     ;  * _IQatan(Y)    , =atan2(Y/1)
                     882     ;  *
                     883     ; 
                     884     ; 
                     885     ;  * @return    angle in degree
                     886     ;  */
                     887     ; 
                     888     ; _iq _IQatan2(_iq A, _iq B)
                     889     
----                 890             RSEG  ?PR?__IQ15atan2?IQMATHLIB
0000                 891     __IQ15atan2:
                     892             USING   0
                     893                             ; SOURCE LINE # 193
0000 8F00     F      894             MOV     A?242+03H,R7
0002 8E00     F      895             MOV     A?242+02H,R6
0004 8D00     F      896             MOV     A?242+01H,R5
0006 8C00     F      897             MOV     A?242,R4
                     898     ; {
                     899                             ; SOURCE LINE # 194
                     900     ;       Y=_IQabs(A);
                     901                             ; SOURCE LINE # 195
0008 AF00     F      902             MOV     R7,A?242+03H
000A AE00     F      903             MOV     R6,A?242+02H
000C AD00     F      904             MOV     R5,A?242+01H
000E AC00     F      905             MOV     R4,A?242
0010 120000   F      906             LCALL   __IQabs
0013 8F00     F      907             MOV     Y+03H,R7
0015 8E00     F      908             MOV     Y+02H,R6
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    15

0017 8D00     F      909             MOV     Y+01H,R5
0019 8C00     F      910             MOV     Y,R4
                     911     ;       X=_IQabs(B);
                     912                             ; SOURCE LINE # 196
001B AF00     F      913             MOV     R7,B?243+03H
001D AE00     F      914             MOV     R6,B?243+02H
001F AD00     F      915             MOV     R5,B?243+01H
0021 AC00     F      916             MOV     R4,B?243
0023 120000   F      917             LCALL   __IQabs
0026 8F00     F      918             MOV     X+03H,R7
0028 8E00     F      919             MOV     X+02H,R6
002A 8D00     F      920             MOV     X+01H,R5
002C 8C00     F      921             MOV     X,R4
                     922     ; 
                     923     ;       
                     924     ;       if (X>Y)
                     925                             ; SOURCE LINE # 199
002E AF00     F      926             MOV     R7,Y+03H
0030 AE00     F      927             MOV     R6,Y+02H
0032 AD00     F      928             MOV     R5,Y+01H
0034 AC00     F      929             MOV     R4,Y
0036 AB00     F      930             MOV     R3,X+03H
0038 AA00     F      931             MOV     R2,X+02H
003A A900     F      932             MOV     R1,X+01H
003C A800     F      933             MOV     R0,X
003E D3              934             SETB    C
003F 120000   F      935             LCALL   ?C?SLCMP
0042 404C            936             JC      ?C0011
                     937     ;               {
                     938                             ; SOURCE LINE # 200
                     939     ;                       
                     940     ;                       
                     941     ;                       
                     942     ;                       Y=BarrelShift(Y,(LA_shift+5));  
                     943                             ; SOURCE LINE # 204
0044 AF00     F      944             MOV     R7,Y+03H
0046 AE00     F      945             MOV     R6,Y+02H
0048 AD00     F      946             MOV     R5,Y+01H
004A AC00     F      947             MOV     R4,Y
004C 7500A5   F      948             MOV     ?_BarrelShift?BYTE+04H,#0A5H
004F 120000   F      949             LCALL   _BarrelShift
0052 8F00     F      950             MOV     Y+03H,R7
0054 8E00     F      951             MOV     Y+02H,R6
0056 8D00     F      952             MOV     Y+01H,R5
0058 8C00     F      953             MOV     Y,R4
                     954     ;                       X=BarrelShift(X,(RA_shift+4));  
                     955                             ; SOURCE LINE # 205
005A AF00     F      956             MOV     R7,X+03H
005C AE00     F      957             MOV     R6,X+02H
005E AD00     F      958             MOV     R5,X+01H
0060 AC00     F      959             MOV     R4,X
0062 750024   F      960             MOV     ?_BarrelShift?BYTE+04H,#024H
0065 120000   F      961             LCALL   _BarrelShift
0068 8F00     F      962             MOV     X+03H,R7
006A 8E00     F      963             MOV     X+02H,R6
006C 8D00     F      964             MOV     X+01H,R5
006E 8C00     F      965             MOV     X,R4
                     966     ;                       X=Y/X;
                     967                             ; SOURCE LINE # 206
0070 AB00     F      968             MOV     R3,X+03H
0072 AA00     F      969             MOV     R2,X+02H
0074 A900     F      970             MOV     R1,X+01H
0076 A800     F      971             MOV     R0,X
0078 AF00     F      972             MOV     R7,Y+03H
007A AE00     F      973             MOV     R6,Y+02H
007C AD00     F      974             MOV     R5,Y+01H
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    16

007E AC00     F      975             MOV     R4,Y
0080 120000   F      976             LCALL   ?C?SLDIV
0083 8F00     F      977             MOV     X+03H,R7
0085 8E00     F      978             MOV     X+02H,R6
0087 8D00     F      979             MOV     X+01H,R5
0089 8C00     F      980             MOV     X,R4
                     981     ;               
                     982     ;               
                     983     ;                       index=pos;
                     984                             ; SOURCE LINE # 209
008B 750000   F      985             MOV     index,#00H
                     986     ;               
                     987     ;                
                     988     ; 
                     989     ;               }
                     990                             ; SOURCE LINE # 213
008E 804A            991             SJMP    ?C0012
0090                 992     ?C0011:
                     993     ;               else
                     994     ;               {
                     995                             ; SOURCE LINE # 215
                     996     ;                       X=BarrelShift(X,(LA_shift+5)); ;
                     997                             ; SOURCE LINE # 216
0090 AF00     F      998             MOV     R7,X+03H
0092 AE00     F      999             MOV     R6,X+02H
0094 AD00     F     1000             MOV     R5,X+01H
0096 AC00     F     1001             MOV     R4,X
0098 7500A5   F     1002             MOV     ?_BarrelShift?BYTE+04H,#0A5H
009B 120000   F     1003             LCALL   _BarrelShift
009E 8F00     F     1004             MOV     X+03H,R7
00A0 8E00     F     1005             MOV     X+02H,R6
00A2 8D00     F     1006             MOV     X+01H,R5
00A4 8C00     F     1007             MOV     X,R4
                    1008     ;                       Y=BarrelShift(Y,(RA_shift+4)); 
                    1009                             ; SOURCE LINE # 217
00A6 AF00     F     1010             MOV     R7,Y+03H
00A8 AE00     F     1011             MOV     R6,Y+02H
00AA AD00     F     1012             MOV     R5,Y+01H
00AC AC00     F     1013             MOV     R4,Y
00AE 750024   F     1014             MOV     ?_BarrelShift?BYTE+04H,#024H
00B1 120000   F     1015             LCALL   _BarrelShift
00B4 8F00     F     1016             MOV     Y+03H,R7
00B6 8E00     F     1017             MOV     Y+02H,R6
00B8 8D00     F     1018             MOV     Y+01H,R5
00BA 8C00     F     1019             MOV     Y,R4
                    1020     ;                       X=X/Y;
                    1021                             ; SOURCE LINE # 218
00BC AF00     F     1022             MOV     R7,X+03H
00BE AE00     F     1023             MOV     R6,X+02H
00C0 AD00     F     1024             MOV     R5,X+01H
00C2 AC00     F     1025             MOV     R4,X
00C4 AB00     F     1026             MOV     R3,Y+03H
00C6 AA00     F     1027             MOV     R2,Y+02H
00C8 A900     F     1028             MOV     R1,Y+01H
00CA A800     F     1029             MOV     R0,Y
00CC 120000   F     1030             LCALL   ?C?SLDIV
00CF 8F00     F     1031             MOV     X+03H,R7
00D1 8E00     F     1032             MOV     X+02H,R6
00D3 8D00     F     1033             MOV     X+01H,R5
00D5 8C00     F     1034             MOV     X,R4
                    1035     ; 
                    1036     ;                       
                    1037     ;                       index=neg;
                    1038                             ; SOURCE LINE # 221
00D7 750001   F     1039             MOV     index,#01H
                    1040     ;               }
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    17

                    1041                             ; SOURCE LINE # 222
00DA                1042     ?C0012:
                    1043     ;                       
                    1044     ;                       
                    1045     ;                       
                    1046     ;               Z=XWORD[X+atan_table];
                    1047                             ; SOURCE LINE # 226
00DA 7F02           1048             MOV     R7,#02H
00DC 7E00           1049             MOV     R6,#00H
00DE 7D00           1050             MOV     R5,#00H
00E0 7C00           1051             MOV     R4,#00H
00E2 AB00     F     1052             MOV     R3,X+03H
00E4 AA00     F     1053             MOV     R2,X+02H
00E6 A900     F     1054             MOV     R1,X+01H
00E8 A800     F     1055             MOV     R0,X
00EA 120000   F     1056             LCALL   ?C?LMUL
00ED E4             1057             CLR     A
00EE 2F             1058             ADD     A,R7
00EF F582           1059             MOV     DPL,A
00F1 740C           1060             MOV     A,#0CH
00F3 3E             1061             ADDC    A,R6
00F4 F583           1062             MOV     DPH,A
00F6 E0             1063             MOVX    A,@DPTR
00F7 FE             1064             MOV     R6,A
00F8 A3             1065             INC     DPTR
00F9 E0             1066             MOVX    A,@DPTR
00FA FF             1067             MOV     R7,A
00FB E4             1068             CLR     A
00FC FC             1069             MOV     R4,A
00FD FD             1070             MOV     R5,A
00FE 8F00     F     1071             MOV     Z+03H,R7
0100 8E00     F     1072             MOV     Z+02H,R6
0102 8D00     F     1073             MOV     Z+01H,R5
0104 8C00     F     1074             MOV     Z,R4
                    1075     ;               Z=Z*45;                 //Z=(Z/4096)*45 degree
                    1076                             ; SOURCE LINE # 227
0106 AF00     F     1077             MOV     R7,Z+03H
0108 AE00     F     1078             MOV     R6,Z+02H
010A AD00     F     1079             MOV     R5,Z+01H
010C AC00     F     1080             MOV     R4,Z
010E 7B2D           1081             MOV     R3,#02DH
0110 7A00           1082             MOV     R2,#00H
0112 7900           1083             MOV     R1,#00H
0114 7800           1084             MOV     R0,#00H
0116 120000   F     1085             LCALL   ?C?LMUL
0119 8F00     F     1086             MOV     Z+03H,R7
011B 8E00     F     1087             MOV     Z+02H,R6
011D 8D00     F     1088             MOV     Z+01H,R5
011F 8C00     F     1089             MOV     Z,R4
                    1090     ;               Z=BarrelShift(Z,(LL_shift+12));                                            
                                                                  //sin table is in Q15 format, it need to convert to Q3
                             1 first by shifting 16 bit to left
                    1091                             ; SOURCE LINE # 228
0121 AF00     F     1092             MOV     R7,Z+03H
0123 AE00     F     1093             MOV     R6,Z+02H
0125 AD00     F     1094             MOV     R5,Z+01H
0127 AC00     F     1095             MOV     R4,Z
0129 75008C   F     1096             MOV     ?_BarrelShift?BYTE+04H,#08CH
012C 120000   F     1097             LCALL   _BarrelShift
012F 8F00     F     1098             MOV     Z+03H,R7
0131 8E00     F     1099             MOV     Z+02H,R6
0133 8D00     F     1100             MOV     Z+01H,R5
0135 8C00     F     1101             MOV     Z,R4
                    1102     ;               Z=BarrelShift(Z, (RA_shift+ (24 - GLOBAL_Q)));          //convert Q31 to gl
                             obal Q format
                    1103                             ; SOURCE LINE # 229
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    18

0137 AF00     F     1104             MOV     R7,Z+03H
0139 AE00     F     1105             MOV     R6,Z+02H
013B AD00     F     1106             MOV     R5,Z+01H
013D AC00     F     1107             MOV     R4,Z
013F 750029   F     1108             MOV     ?_BarrelShift?BYTE+04H,#029H
0142 120000   F     1109             LCALL   _BarrelShift
0145 8F00     F     1110             MOV     Z+03H,R7
0147 8E00     F     1111             MOV     Z+02H,R6
0149 8D00     F     1112             MOV     Z+01H,R5
014B 8C00     F     1113             MOV     Z,R4
                    1114     ;               
                    1115     ;               
                    1116     ;               if (index==neg) Z=_IQ(90.0)-Z;
                    1117                             ; SOURCE LINE # 232
014D E500     F     1118             MOV     A,index
014F B40116         1119             CJNE    A,#01H,?C0013
0152 C3             1120             CLR     C
0153 E4             1121             CLR     A
0154 9500     F     1122             SUBB    A,Z+03H
0156 F500     F     1123             MOV     Z+03H,A
0158 E4             1124             CLR     A
0159 9500     F     1125             SUBB    A,Z+02H
015B F500     F     1126             MOV     Z+02H,A
015D 742D           1127             MOV     A,#02DH
015F 9500     F     1128             SUBB    A,Z+01H
0161 F500     F     1129             MOV     Z+01H,A
0163 E4             1130             CLR     A
0164 9500     F     1131             SUBB    A,Z
0166 F500     F     1132             MOV     Z,A
0168                1133     ?C0013:
                    1134     ;               
                    1135     ;       if ((A<0)&&(B>0))
                    1136                             ; SOURCE LINE # 234
0168 7F00           1137             MOV     R7,#00H
016A 7E00           1138             MOV     R6,#00H
016C 7D00           1139             MOV     R5,#00H
016E 7C00           1140             MOV     R4,#00H
0170 AB00     F     1141             MOV     R3,A?242+03H
0172 AA00     F     1142             MOV     R2,A?242+02H
0174 A900     F     1143             MOV     R1,A?242+01H
0176 A800     F     1144             MOV     R0,A?242
0178 C3             1145             CLR     C
0179 120000   F     1146             LCALL   ?C?SLCMP
017C 502F           1147             JNC     ?C0014
017E 7F00           1148             MOV     R7,#00H
0180 7E00           1149             MOV     R6,#00H
0182 7D00           1150             MOV     R5,#00H
0184 7C00           1151             MOV     R4,#00H
0186 AB00     F     1152             MOV     R3,B?243+03H
0188 AA00     F     1153             MOV     R2,B?243+02H
018A A900     F     1154             MOV     R1,B?243+01H
018C A800     F     1155             MOV     R0,B?243
018E D3             1156             SETB    C
018F 120000   F     1157             LCALL   ?C?SLCMP
0192 4019           1158             JC      ?C0014
                    1159     ;               Z=_IQ(180.0)-Z;
                    1160                             ; SOURCE LINE # 235
0194 C3             1161             CLR     C
0195 E4             1162             CLR     A
0196 9500     F     1163             SUBB    A,Z+03H
0198 F500     F     1164             MOV     Z+03H,A
019A E4             1165             CLR     A
019B 9500     F     1166             SUBB    A,Z+02H
019D F500     F     1167             MOV     Z+02H,A
019F 745A           1168             MOV     A,#05AH
01A1 9500     F     1169             SUBB    A,Z+01H
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    19

01A3 F500     F     1170             MOV     Z+01H,A
01A5 E4             1171             CLR     A
01A6 9500     F     1172             SUBB    A,Z
01A8 F500     F     1173             MOV     Z,A
01AA 020000   F     1174             LJMP    ?C0015
01AD                1175     ?C0014:
                    1176     ;               else if ((A<0)&&(B<0))
                    1177                             ; SOURCE LINE # 236
01AD 7F00           1178             MOV     R7,#00H
01AF 7E00           1179             MOV     R6,#00H
01B1 7D00           1180             MOV     R5,#00H
01B3 7C00           1181             MOV     R4,#00H
01B5 AB00     F     1182             MOV     R3,A?242+03H
01B7 AA00     F     1183             MOV     R2,A?242+02H
01B9 A900     F     1184             MOV     R1,A?242+01H
01BB A800     F     1185             MOV     R0,A?242
01BD C3             1186             CLR     C
01BE 120000   F     1187             LCALL   ?C?SLCMP
01C1 5030           1188             JNC     ?C0016
01C3 7F00           1189             MOV     R7,#00H
01C5 7E00           1190             MOV     R6,#00H
01C7 7D00           1191             MOV     R5,#00H
01C9 7C00           1192             MOV     R4,#00H
01CB AB00     F     1193             MOV     R3,B?243+03H
01CD AA00     F     1194             MOV     R2,B?243+02H
01CF A900     F     1195             MOV     R1,B?243+01H
01D1 A800     F     1196             MOV     R0,B?243
01D3 C3             1197             CLR     C
01D4 120000   F     1198             LCALL   ?C?SLCMP
01D7 501A           1199             JNC     ?C0016
                    1200     ;                       Z=_IQ(180.0)+Z;
                    1201                             ; SOURCE LINE # 237
01D9 E500     F     1202             MOV     A,Z+03H
01DB 2400           1203             ADD     A,#00H
01DD F500     F     1204             MOV     Z+03H,A
01DF E500     F     1205             MOV     A,Z+02H
01E1 3400           1206             ADDC    A,#00H
01E3 F500     F     1207             MOV     Z+02H,A
01E5 E500     F     1208             MOV     A,Z+01H
01E7 345A           1209             ADDC    A,#05AH
01E9 F500     F     1210             MOV     Z+01H,A
01EB E500     F     1211             MOV     A,Z
01ED 3400           1212             ADDC    A,#00H
01EF F500     F     1213             MOV     Z,A
01F1 8042           1214             SJMP    ?C0015
01F3                1215     ?C0016:
                    1216     ;               else if ((A>0)&&(B<0))
                    1217                             ; SOURCE LINE # 238
01F3 7F00           1218             MOV     R7,#00H
01F5 7E00           1219             MOV     R6,#00H
01F7 7D00           1220             MOV     R5,#00H
01F9 7C00           1221             MOV     R4,#00H
01FB AB00     F     1222             MOV     R3,A?242+03H
01FD AA00     F     1223             MOV     R2,A?242+02H
01FF A900     F     1224             MOV     R1,A?242+01H
0201 A800     F     1225             MOV     R0,A?242
0203 D3             1226             SETB    C
0204 120000   F     1227             LCALL   ?C?SLCMP
0207 402C           1228             JC      ?C0015
0209 7F00           1229             MOV     R7,#00H
020B 7E00           1230             MOV     R6,#00H
020D 7D00           1231             MOV     R5,#00H
020F 7C00           1232             MOV     R4,#00H
0211 AB00     F     1233             MOV     R3,B?243+03H
0213 AA00     F     1234             MOV     R2,B?243+02H
0215 A900     F     1235             MOV     R1,B?243+01H
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    20

0217 A800     F     1236             MOV     R0,B?243
0219 C3             1237             CLR     C
021A 120000   F     1238             LCALL   ?C?SLCMP
021D 5016           1239             JNC     ?C0015
                    1240     ;                       Z=_IQ(360.0)-Z;
                    1241                             ; SOURCE LINE # 239
021F C3             1242             CLR     C
0220 E4             1243             CLR     A
0221 9500     F     1244             SUBB    A,Z+03H
0223 F500     F     1245             MOV     Z+03H,A
0225 E4             1246             CLR     A
0226 9500     F     1247             SUBB    A,Z+02H
0228 F500     F     1248             MOV     Z+02H,A
022A 74B4           1249             MOV     A,#0B4H
022C 9500     F     1250             SUBB    A,Z+01H
022E F500     F     1251             MOV     Z+01H,A
0230 E4             1252             CLR     A
0231 9500     F     1253             SUBB    A,Z
0233 F500     F     1254             MOV     Z,A
0235                1255     ?C0018:
0235                1256     ?C0017:
0235                1257     ?C0015:
                    1258     ;       
                    1259     ;       
                    1260     ; 
                    1261     ; return Z;     
                    1262                             ; SOURCE LINE # 243
0235 AF00     F     1263             MOV     R7,Z+03H
0237 AE00     F     1264             MOV     R6,Z+02H
0239 AD00     F     1265             MOV     R5,Z+01H
023B AC00     F     1266             MOV     R4,Z
                    1267     ; }
                    1268                             ; SOURCE LINE # 244
023D                1269     ?C0019:
023D 22             1270             RET     
                    1271     ; END OF __IQ15atan2
                    1272     
                    1273     ; 
                    1274     ; 
                    1275     ; _iq _IQmag(_iq A, _iq B) 
                    1276     
----                1277             RSEG  ?PR?__IQ15mag?IQMATHLIB
0000                1278     __IQ15mag:
                    1279             USING   0
                    1280                             ; SOURCE LINE # 247
0000 8F00     F     1281             MOV     A?344+03H,R7
0002 8E00     F     1282             MOV     A?344+02H,R6
0004 8D00     F     1283             MOV     A?344+01H,R5
0006 8C00     F     1284             MOV     A?344,R4
                    1285     ; {
                    1286                             ; SOURCE LINE # 248
                    1287     ;       X=_IQmpy(A,A)+_IQmpy(B,B);
                    1288                             ; SOURCE LINE # 249
0008 AF00     F     1289             MOV     R7,B?345+03H
000A AE00     F     1290             MOV     R6,B?345+02H
000C AD00     F     1291             MOV     R5,B?345+01H
000E AC00     F     1292             MOV     R4,B?345
0010 750028   F     1293             MOV     ?_BarrelShift?BYTE+04H,#028H
0013 120000   F     1294             LCALL   _BarrelShift
0016 C004           1295             PUSH    AR4
0018 C005           1296             PUSH    AR5
001A C006           1297             PUSH    AR6
001C C007           1298             PUSH    AR7
001E AF00     F     1299             MOV     R7,B?345+03H
0020 AE00     F     1300             MOV     R6,B?345+02H
0022 AD00     F     1301             MOV     R5,B?345+01H
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    21

0024 AC00     F     1302             MOV     R4,B?345
0026 750027   F     1303             MOV     ?_BarrelShift?BYTE+04H,#027H
0029 120000   F     1304             LCALL   _BarrelShift
002C A804           1305             MOV     R0,AR4
002E A905           1306             MOV     R1,AR5
0030 AA06           1307             MOV     R2,AR6
0032 AB07           1308             MOV     R3,AR7
0034 D007           1309             POP     AR7
0036 D006           1310             POP     AR6
0038 D005           1311             POP     AR5
003A D004           1312             POP     AR4
003C 120000   F     1313             LCALL   ?C?LMUL
003F C004           1314             PUSH    AR4
0041 C005           1315             PUSH    AR5
0043 C006           1316             PUSH    AR6
0045 C007           1317             PUSH    AR7
0047 AF00     F     1318             MOV     R7,A?344+03H
0049 AE00     F     1319             MOV     R6,A?344+02H
004B AD00     F     1320             MOV     R5,A?344+01H
004D AC00     F     1321             MOV     R4,A?344
004F 750028   F     1322             MOV     ?_BarrelShift?BYTE+04H,#028H
0052 120000   F     1323             LCALL   _BarrelShift
0055 C004           1324             PUSH    AR4
0057 C005           1325             PUSH    AR5
0059 C006           1326             PUSH    AR6
005B C007           1327             PUSH    AR7
005D AF00     F     1328             MOV     R7,A?344+03H
005F AE00     F     1329             MOV     R6,A?344+02H
0061 AD00     F     1330             MOV     R5,A?344+01H
0063 AC00     F     1331             MOV     R4,A?344
0065 750027   F     1332             MOV     ?_BarrelShift?BYTE+04H,#027H
0068 120000   F     1333             LCALL   _BarrelShift
006B A804           1334             MOV     R0,AR4
006D A905           1335             MOV     R1,AR5
006F AA06           1336             MOV     R2,AR6
0071 AB07           1337             MOV     R3,AR7
0073 D007           1338             POP     AR7
0075 D006           1339             POP     AR6
0077 D005           1340             POP     AR5
0079 D004           1341             POP     AR4
007B 120000   F     1342             LCALL   ?C?LMUL
007E A804           1343             MOV     R0,AR4
0080 A905           1344             MOV     R1,AR5
0082 AA06           1345             MOV     R2,AR6
0084 AB07           1346             MOV     R3,AR7
0086 D007           1347             POP     AR7
0088 D006           1348             POP     AR6
008A D005           1349             POP     AR5
008C D004           1350             POP     AR4
008E EB             1351             MOV     A,R3
008F 2F             1352             ADD     A,R7
0090 F500     F     1353             MOV     X+03H,A
0092 EA             1354             MOV     A,R2
0093 3E             1355             ADDC    A,R6
0094 F500     F     1356             MOV     X+02H,A
0096 E9             1357             MOV     A,R1
0097 3D             1358             ADDC    A,R5
0098 F500     F     1359             MOV     X+01H,A
009A E8             1360             MOV     A,R0
009B 3C             1361             ADDC    A,R4
009C F500     F     1362             MOV     X,A
                    1363     ;       Z=_IQsqrt(X);
                    1364                             ; SOURCE LINE # 250
009E AF00     F     1365             MOV     R7,X+03H
00A0 AE00     F     1366             MOV     R6,X+02H
00A2 AD00     F     1367             MOV     R5,X+01H
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    22

00A4 AC00     F     1368             MOV     R4,X
00A6 120000   F     1369             LCALL   __IQ15sqrt
00A9 8F00     F     1370             MOV     Z+03H,R7
00AB 8E00     F     1371             MOV     Z+02H,R6
00AD 8D00     F     1372             MOV     Z+01H,R5
00AF 8C00     F     1373             MOV     Z,R4
                    1374     ;       return Z;
                    1375                             ; SOURCE LINE # 251
00B1 AF00     F     1376             MOV     R7,Z+03H
00B3 AE00     F     1377             MOV     R6,Z+02H
00B5 AD00     F     1378             MOV     R5,Z+01H
00B7 AC00     F     1379             MOV     R4,Z
                    1380     ;       
                    1381     ; }
                    1382                             ; SOURCE LINE # 253
00B9                1383     ?C0020:
00B9 22             1384             RET     
                    1385     ; END OF __IQ15mag
                    1386     
                    1387             END
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    23

SYMBOL TABLE LISTING
------ ----- -------


N A M E                    T Y P E  V A L U E   ATTRIBUTES

?C0001. . . . . . . . . .  C ADDR   001BH   R   SEG=?PR?__IQ15SIN?IQMATHLIB
?C0002. . . . . . . . . .  C ADDR   004CH   R   SEG=?PR?__IQ15SIN?IQMATHLIB
?C0003. . . . . . . . . .  C ADDR   011DH   R   SEG=?PR?__IQ15SIN?IQMATHLIB
?C0004. . . . . . . . . .  C ADDR   0125H   R   SEG=?PR?__IQ15SIN?IQMATHLIB
?C0005. . . . . . . . . .  C ADDR   0027H   R   SEG=?PR?__IQ15SQRT?IQMATHLIB
?C0006. . . . . . . . . .  C ADDR   0191H   R   SEG=?PR?__IQ15SQRT?IQMATHLIB
?C0007. . . . . . . . . .  C ADDR   00B6H   R   SEG=?PR?__IQ15SQRT?IQMATHLIB
?C0008. . . . . . . . . .  C ADDR   0112H   R   SEG=?PR?__IQ15SQRT?IQMATHLIB
?C0009. . . . . . . . . .  C ADDR   0167H   R   SEG=?PR?__IQ15SQRT?IQMATHLIB
?C0010. . . . . . . . . .  C ADDR   0189H   R   SEG=?PR?__IQ15SQRT?IQMATHLIB
?C0011. . . . . . . . . .  C ADDR   0090H   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0012. . . . . . . . . .  C ADDR   00DAH   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0013. . . . . . . . . .  C ADDR   0168H   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0014. . . . . . . . . .  C ADDR   01ADH   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0015. . . . . . . . . .  C ADDR   0235H   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0016. . . . . . . . . .  C ADDR   01F3H   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0017. . . . . . . . . .  C ADDR   0235H   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0018. . . . . . . . . .  C ADDR   0235H   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0019. . . . . . . . . .  C ADDR   023DH   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
?C0020. . . . . . . . . .  C ADDR   00B9H   R   SEG=?PR?__IQ15MAG?IQMATHLIB
?C?LMUL . . . . . . . . .  C ADDR   -----       EXT
?C?LNEG . . . . . . . . .  C ADDR   -----       EXT
?C?SCDIV. . . . . . . . .  C ADDR   -----       EXT
?C?SLCMP. . . . . . . . .  C ADDR   -----       EXT
?C?SLDIV. . . . . . . . .  C ADDR   -----       EXT
?DT?IQMATHLIB . . . . . .  D SEG    0011H       REL=UNIT
?DT?__IQ15ATAN2?IQMATHLIB  D SEG    0008H       REL=UNIT
?DT?__IQ15MAG?IQMATHLIB .  D SEG    0008H       REL=UNIT
?DT?__IQ15SIN?IQMATHLIB .  D SEG    0004H       REL=UNIT
?DT?__IQ15SQRT?IQMATHLIB.  D SEG    0004H       REL=UNIT
?PR?__IQ15ATAN2?IQMATHLIB  C SEG    023EH       REL=UNIT
?PR?__IQ15MAG?IQMATHLIB .  C SEG    00BAH       REL=UNIT
?PR?__IQ15SIN?IQMATHLIB .  C SEG    0126H       REL=UNIT
?PR?__IQ15SQRT?IQMATHLIB.  C SEG    0192H       REL=UNIT
?_BARRELSHIFT?BYTE. . . .  D ADDR   -----       EXT
?__IQ15ATAN2?BYTE . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15ATAN2?IQMATHLIB
?__IQ15MAG?BYTE . . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15MAG?IQMATHLIB
?__IQ15SIN?BYTE . . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15SIN?IQMATHLIB
?__IQ15SQRT?BYTE. . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15SQRT?IQMATHLIB
A?040 . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15SIN?IQMATHLIB
A?141 . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15SQRT?IQMATHLIB
A?242 . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15ATAN2?IQMATHLIB
A?344 . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?__IQ15MAG?IQMATHLIB
ACC . . . . . . . . . . .  D ADDR   00E0H   A   
AR4 . . . . . . . . . . .  D ADDR   0004H   A   
AR5 . . . . . . . . . . .  D ADDR   0005H   A   
AR6 . . . . . . . . . . .  D ADDR   0006H   A   
AR7 . . . . . . . . . . .  D ADDR   0007H   A   
ARCON . . . . . . . . . .  D ADDR   00EFH   A   
B . . . . . . . . . . . .  D ADDR   00F0H   A   
B?243 . . . . . . . . . .  D ADDR   0004H   R   SEG=?DT?__IQ15ATAN2?IQMATHLIB
B?345 . . . . . . . . . .  D ADDR   0004H   R   SEG=?DT?__IQ15MAG?IQMATHLIB
BPCTRL. . . . . . . . . .  D ADDR   0093H   A   
BREAKH. . . . . . . . . .  D ADDR   0095H   A   
BREAKL. . . . . . . . . .  D ADDR   0094H   A   
BSHCTL. . . . . . . . . .  D ADDR   00ABH   A   
BSHI. . . . . . . . . . .  D ADDR   00ACH   A   
BSHI_0. . . . . . . . . .  D ADDR   00ACH   A   
BSHI_1. . . . . . . . . .  D ADDR   00ADH   A   
BSHI_2. . . . . . . . . .  D ADDR   00AEH   A   
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    24

BSHI_3. . . . . . . . . .  D ADDR   00AFH   A   
BSHO. . . . . . . . . . .  D ADDR   00BCH   A   
BSHO_0. . . . . . . . . .  D ADDR   00BCH   A   
BSHO_1. . . . . . . . . .  D ADDR   00BDH   A   
BSHO_2. . . . . . . . . .  D ADDR   00BEH   A   
BSHO_3. . . . . . . . . .  D ADDR   00BFH   A   
CKCON . . . . . . . . . .  D ADDR   008EH   A   
CLK_DIV . . . . . . . . .  D ADDR   0091H   A   
CLK_PD_CON. . . . . . . .  D ADDR   008FH   A   
DAT . . . . . . . . . . .  D ADDR   0001H   R   SEG=?DT?IQMATHLIB
DPH . . . . . . . . . . .  D ADDR   0083H   A   
DPH1. . . . . . . . . . .  D ADDR   0085H   A   
DPL . . . . . . . . . . .  D ADDR   0082H   A   
DPL1. . . . . . . . . . .  D ADDR   0084H   A   
DPS . . . . . . . . . . .  D ADDR   0092H   A   
EADC. . . . . . . . . . .  B ADDR   00B8H.0 A   
EAL . . . . . . . . . . .  B ADDR   00A8H.7 A   
ES. . . . . . . . . . . .  B ADDR   00A8H.4 A   
ES0 . . . . . . . . . . .  B ADDR   00A8H.4 A   
ET0 . . . . . . . . . . .  B ADDR   00A8H.1 A   
ET1 . . . . . . . . . . .  B ADDR   00A8H.3 A   
EX0 . . . . . . . . . . .  B ADDR   00A8H.0 A   
EX1 . . . . . . . . . . .  B ADDR   00A8H.2 A   
EX2 . . . . . . . . . . .  B ADDR   00B8H.1 A   
EX3 . . . . . . . . . . .  B ADDR   00B8H.2 A   
EX4 . . . . . . . . . . .  B ADDR   00B8H.3 A   
EX5 . . . . . . . . . . .  B ADDR   00B8H.4 A   
EX6 . . . . . . . . . . .  B ADDR   00B8H.5 A   
I2FR. . . . . . . . . . .  B ADDR   00C8H.5 A   
I3FR. . . . . . . . . . .  B ADDR   00C8H.6 A   
IADC. . . . . . . . . . .  B ADDR   00C0H.0 A   
IE. . . . . . . . . . . .  D ADDR   00A8H   A   
IE0 . . . . . . . . . . .  B ADDR   0088H.1 A   
IE1 . . . . . . . . . . .  B ADDR   0088H.3 A   
IEN0. . . . . . . . . . .  D ADDR   00A8H   A   
IEN1. . . . . . . . . . .  D ADDR   00B8H   A   
IEN2. . . . . . . . . . .  D ADDR   009AH   A   
IEX2. . . . . . . . . . .  B ADDR   00C0H.1 A   
IEX3. . . . . . . . . . .  B ADDR   00C0H.2 A   
IEX4. . . . . . . . . . .  B ADDR   00C0H.3 A   
IEX5. . . . . . . . . . .  B ADDR   00C0H.4 A   
IEX6. . . . . . . . . . .  B ADDR   00C0H.5 A   
INDEX . . . . . . . . . .  D ADDR   0000H   R   SEG=?DT?IQMATHLIB
INT_REG1. . . . . . . . .  D ADDR   00F9H   A   
INT_REG2. . . . . . . . .  D ADDR   00FAH   A   
INT_REG3. . . . . . . . .  D ADDR   00FDH   A   
INT_REG4. . . . . . . . .  D ADDR   00FEH   A   
IP0 . . . . . . . . . . .  D ADDR   00A9H   A   
IP1 . . . . . . . . . . .  D ADDR   00B9H   A   
IQMATHLIB . . . . . . . .  N NUMB   -----       
IRCON . . . . . . . . . .  D ADDR   00C0H   A   
IT0 . . . . . . . . . . .  B ADDR   0088H.0 A   
IT1 . . . . . . . . . . .  B ADDR   0088H.2 A   
MD0 . . . . . . . . . . .  D ADDR   00E9H   A   
MD1 . . . . . . . . . . .  D ADDR   00EAH   A   
MD2 . . . . . . . . . . .  D ADDR   00EBH   A   
MD3 . . . . . . . . . . .  D ADDR   00ECH   A   
MD4 . . . . . . . . . . .  D ADDR   00EDH   A   
MD5 . . . . . . . . . . .  D ADDR   00EEH   A   
MEM_CONFIG. . . . . . . .  D ADDR   00E8H   A   
P0. . . . . . . . . . . .  D ADDR   0080H   A   
P00 . . . . . . . . . . .  B ADDR   0080H.0 A   
P01 . . . . . . . . . . .  B ADDR   0080H.1 A   
P02 . . . . . . . . . . .  B ADDR   0080H.2 A   
P03 . . . . . . . . . . .  B ADDR   0080H.3 A   
P04 . . . . . . . . . . .  B ADDR   0080H.4 A   
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    25

P05 . . . . . . . . . . .  B ADDR   0080H.5 A   
P06 . . . . . . . . . . .  B ADDR   0080H.6 A   
P07 . . . . . . . . . . .  B ADDR   0080H.7 A   
P1. . . . . . . . . . . .  D ADDR   0090H   A   
P10 . . . . . . . . . . .  B ADDR   0090H.0 A   
P11 . . . . . . . . . . .  B ADDR   0090H.1 A   
P12 . . . . . . . . . . .  B ADDR   0090H.2 A   
P13 . . . . . . . . . . .  B ADDR   0090H.3 A   
P14 . . . . . . . . . . .  B ADDR   0090H.4 A   
P15 . . . . . . . . . . .  B ADDR   0090H.5 A   
P16 . . . . . . . . . . .  B ADDR   0090H.6 A   
P17 . . . . . . . . . . .  B ADDR   0090H.7 A   
P1AQCSFRC . . . . . . . .  D ADDR   00B1H   A   
P1AQSFRC. . . . . . . . .  D ADDR   00A7H   A   
P1CMPA. . . . . . . . . .  D ADDR   00A3H   A   
P1CMPA_H. . . . . . . . .  D ADDR   00A4H   A   
P1CMPA_L. . . . . . . . .  D ADDR   00A3H   A   
P1CMPB. . . . . . . . . .  D ADDR   00A5H   A   
P1CMPB_H. . . . . . . . .  D ADDR   00A6H   A   
P1CMPB_L. . . . . . . . .  D ADDR   00A5H   A   
P1ETCLR . . . . . . . . .  D ADDR   00B6H   A   
P1ETFLG . . . . . . . . .  D ADDR   00B5H   A   
P1ETFRC . . . . . . . . .  D ADDR   00B7H   A   
P1TBPRD . . . . . . . . .  D ADDR   00A1H   A   
P1TBPRD_H . . . . . . . .  D ADDR   00A2H   A   
P1TBPRD_L . . . . . . . .  D ADDR   00A1H   A   
P1TZCLR . . . . . . . . .  D ADDR   00B3H   A   
P1TZFLG . . . . . . . . .  D ADDR   00B2H   A   
P1TZFRC . . . . . . . . .  D ADDR   00B4H   A   
P2. . . . . . . . . . . .  D ADDR   00A0H   A   
P20 . . . . . . . . . . .  B ADDR   00A0H.0 A   
P21 . . . . . . . . . . .  B ADDR   00A0H.1 A   
P22 . . . . . . . . . . .  B ADDR   00A0H.2 A   
P23 . . . . . . . . . . .  B ADDR   00A0H.3 A   
P24 . . . . . . . . . . .  B ADDR   00A0H.4 A   
P25 . . . . . . . . . . .  B ADDR   00A0H.5 A   
P26 . . . . . . . . . . .  B ADDR   00A0H.6 A   
P27 . . . . . . . . . . .  B ADDR   00A0H.7 A   
P2AQCSFRC . . . . . . . .  D ADDR   00C9H   A   
P2AQSFRC. . . . . . . . .  D ADDR   00C7H   A   
P2CMPA. . . . . . . . . .  D ADDR   00C3H   A   
P2CMPA_H. . . . . . . . .  D ADDR   00C4H   A   
P2CMPA_L. . . . . . . . .  D ADDR   00C3H   A   
P2CMPB. . . . . . . . . .  D ADDR   00C5H   A   
P2CMPB_H. . . . . . . . .  D ADDR   00C6H   A   
P2CMPB_L. . . . . . . . .  D ADDR   00C5H   A   
P2ETCLR . . . . . . . . .  D ADDR   00CEH   A   
P2ETFLG . . . . . . . . .  D ADDR   00CDH   A   
P2ETFRC . . . . . . . . .  D ADDR   00CFH   A   
P2TBPRD . . . . . . . . .  D ADDR   00C1H   A   
P2TBPRD_H . . . . . . . .  D ADDR   00C2H   A   
P2TBPRD_L . . . . . . . .  D ADDR   00C1H   A   
P2TZCLR . . . . . . . . .  D ADDR   00CBH   A   
P2TZFLG . . . . . . . . .  D ADDR   00CAH   A   
P2TZFRC . . . . . . . . .  D ADDR   00CCH   A   
P3. . . . . . . . . . . .  D ADDR   00B0H   A   
P30 . . . . . . . . . . .  B ADDR   00B0H.0 A   
P31 . . . . . . . . . . .  B ADDR   00B0H.1 A   
P32 . . . . . . . . . . .  B ADDR   00B0H.2 A   
P33 . . . . . . . . . . .  B ADDR   00B0H.3 A   
P34 . . . . . . . . . . .  B ADDR   00B0H.4 A   
P35 . . . . . . . . . . .  B ADDR   00B0H.5 A   
P36 . . . . . . . . . . .  B ADDR   00B0H.6 A   
P37 . . . . . . . . . . .  B ADDR   00B0H.7 A   
P3AQCSFRC . . . . . . . .  D ADDR   00D9H   A   
P3AQSFRC. . . . . . . . .  D ADDR   00D7H   A   
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    26

P3CMPA. . . . . . . . . .  D ADDR   00D3H   A   
P3CMPA_H. . . . . . . . .  D ADDR   00D4H   A   
P3CMPA_L. . . . . . . . .  D ADDR   00D3H   A   
P3CMPB. . . . . . . . . .  D ADDR   00D5H   A   
P3CMPB_H. . . . . . . . .  D ADDR   00D6H   A   
P3CMPB_L. . . . . . . . .  D ADDR   00D5H   A   
P3ETCLR . . . . . . . . .  D ADDR   00DEH   A   
P3ETFLG . . . . . . . . .  D ADDR   00DDH   A   
P3ETFRC . . . . . . . . .  D ADDR   00DFH   A   
P3TBPRD . . . . . . . . .  D ADDR   00D1H   A   
P3TBPRD_H . . . . . . . .  D ADDR   00D2H   A   
P3TBPRD_L . . . . . . . .  D ADDR   00D1H   A   
P3TZCLR . . . . . . . . .  D ADDR   00DBH   A   
P3TZFLG . . . . . . . . .  D ADDR   00DAH   A   
P3TZFRC . . . . . . . . .  D ADDR   00DCH   A   
P4AQCSFRC . . . . . . . .  D ADDR   00F1H   A   
P4AQSFRC. . . . . . . . .  D ADDR   00E7H   A   
P4CMPA. . . . . . . . . .  D ADDR   00E3H   A   
P4CMPA_H. . . . . . . . .  D ADDR   00E4H   A   
P4CMPA_L. . . . . . . . .  D ADDR   00E3H   A   
P4CMPB. . . . . . . . . .  D ADDR   00E5H   A   
P4CMPB_H. . . . . . . . .  D ADDR   00E6H   A   
P4CMPB_L. . . . . . . . .  D ADDR   00E5H   A   
P4ETCLR . . . . . . . . .  D ADDR   00F6H   A   
P4ETFLG . . . . . . . . .  D ADDR   00F5H   A   
P4ETFRC . . . . . . . . .  D ADDR   00F7H   A   
P4TBPRD . . . . . . . . .  D ADDR   00E1H   A   
P4TBPRD_H . . . . . . . .  D ADDR   00E2H   A   
P4TBPRD_L . . . . . . . .  D ADDR   00E1H   A   
P4TZCLR . . . . . . . . .  D ADDR   00F3H   A   
P4TZFLG . . . . . . . . .  D ADDR   00F2H   A   
P4TZFRC . . . . . . . . .  D ADDR   00F4H   A   
PCON. . . . . . . . . . .  D ADDR   0087H   A   
POWER_CON . . . . . . . .  D ADDR   0097H   A   
PSW . . . . . . . . . . .  D ADDR   00D0H   A   
RB80. . . . . . . . . . .  B ADDR   0098H.2 A   
REN0. . . . . . . . . . .  B ADDR   0098H.4 A   
RI. . . . . . . . . . . .  B ADDR   0098H.0 A   
RI0 . . . . . . . . . . .  B ADDR   0098H.0 A   
S0BUF . . . . . . . . . .  D ADDR   0099H   A   
S0CON . . . . . . . . . .  D ADDR   0098H   A   
S0RELH. . . . . . . . . .  D ADDR   00BAH   A   
S0RELL. . . . . . . . . .  D ADDR   00AAH   A   
S1BUF . . . . . . . . . .  D ADDR   009CH   A   
S1CON . . . . . . . . . .  D ADDR   009BH   A   
S1RELH. . . . . . . . . .  D ADDR   00BBH   A   
S1RELL. . . . . . . . . .  D ADDR   009DH   A   
SBUF. . . . . . . . . . .  D ADDR   0099H   A   
SM0 . . . . . . . . . . .  B ADDR   0098H.7 A   
SM1 . . . . . . . . . . .  B ADDR   0098H.6 A   
SM20. . . . . . . . . . .  B ADDR   0098H.5 A   
SP. . . . . . . . . . . .  D ADDR   0081H   A   
SRAM_CON. . . . . . . . .  D ADDR   00F8H   A   
SWDT. . . . . . . . . . .  B ADDR   00B8H.6 A   
T2CON . . . . . . . . . .  D ADDR   00C8H   A   
TB80. . . . . . . . . . .  B ADDR   0098H.3 A   
TCON. . . . . . . . . . .  D ADDR   0088H   A   
TF0 . . . . . . . . . . .  B ADDR   0088H.5 A   
TF1 . . . . . . . . . . .  B ADDR   0088H.7 A   
TH0 . . . . . . . . . . .  D ADDR   008CH   A   
TH1 . . . . . . . . . . .  D ADDR   008DH   A   
TI0 . . . . . . . . . . .  B ADDR   0098H.1 A   
TL0 . . . . . . . . . . .  D ADDR   008AH   A   
TL1 . . . . . . . . . . .  D ADDR   008BH   A   
TMOD. . . . . . . . . . .  D ADDR   0089H   A   
TR0 . . . . . . . . . . .  B ADDR   0088H.4 A   
A51 MACRO ASSEMBLER  IQMATHLIB                                                            12/07/2018 10:23:44 PAGE    27

TR1 . . . . . . . . . . .  B ADDR   0088H.6 A   
WDCON . . . . . . . . . .  D ADDR   00D8H   A   
WDCON_7 . . . . . . . . .  B ADDR   00D8H.7 A   
WDT . . . . . . . . . . .  B ADDR   00A8H.6 A   
WDTREL. . . . . . . . . .  D ADDR   0086H   A   
X . . . . . . . . . . . .  D ADDR   0005H   R   SEG=?DT?IQMATHLIB
Y . . . . . . . . . . . .  D ADDR   0009H   R   SEG=?DT?IQMATHLIB
Z . . . . . . . . . . . .  D ADDR   000DH   R   SEG=?DT?IQMATHLIB
_BARRELSHIFT. . . . . . .  C ADDR   -----       EXT
_NORMALIZE. . . . . . . .  C ADDR   -----       EXT
__IQ15ATAN2 . . . . . . .  C ADDR   0000H   R   SEG=?PR?__IQ15ATAN2?IQMATHLIB
__IQ15MAG . . . . . . . .  C ADDR   0000H   R   SEG=?PR?__IQ15MAG?IQMATHLIB
__IQ15SIN . . . . . . . .  C ADDR   0000H   R   SEG=?PR?__IQ15SIN?IQMATHLIB
__IQ15SQRT. . . . . . . .  C ADDR   0000H   R   SEG=?PR?__IQ15SQRT?IQMATHLIB
__IQABS . . . . . . . . .  C ADDR   -----       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
