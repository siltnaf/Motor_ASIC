C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE IQMATHLIB
OBJECT MODULE PLACED IN .\OUTPUT\IQmathLib.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SRC\IQmathLib.c OPTIMIZE(0,SPEED) REGFILE(.\OUTPUT\motor.ORC) BROWSE INT
                    -VECTOR(0X2000) INCDIR(.\INC) DEBUG OBJECTEXTEND CODE PRINT(.\files\IQmathLib.lst) TABS(2) OBJECT(.\OUTPUT\IQmathLib.obj)

line level    source

   1          /*
   2           * lib.c
   3           *  Copy Right (c) of JE
   4           *  Created on: 
   5           *      18 Sep 2018
   6           *  Author: 
   7           *      Ken
   8           *  Last Modified: 
   9           *     
  10           *  Description: 
  11           *      lib for JE8MCU
  12           *  History:
  13           *      ver 0.1 created by ken on 12 August 2016 
  14           *
  15           *    Use math table for fuctions of 
  16           *        sin, cos, inverse, sqrt, artan
  17           *        Park transform and Clark transform
  18           *
  19           *
  20           */
  21           
  22           /***************************************************
  23           * Includes
  24           */
  25          
  26          #include <intrins.h>   
  27          #include <absacc.h>
  28          #include "register.h"
  29          #include "IQmathLib.h"
  30          
  31          
  32          
  33           Long_Data dat;
  34           _iq data X,Y,Z;
  35           S8  data index;
  36          
  37          
  38          
  39          
  40          
  41          
  42          
  43          
  44          
  45          
  46          //_iq Normalize(_iq A)              //normalize only work for positive value. it return error if the MD3_7
             -=1 
  47          //{
  48          
  49          
  50          //  
  51          
  52          // dat.Ldata =A;
  53          // MD0 = dat.ss1.Byte0;
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 2   

  54          // MD1 = dat.ss1.Byte1;
  55          // MD2 = dat.ss1.Byte2;
  56          // MD3 = dat.ss1.Byte3;
  57          //  
  58          
  59          //  
  60          // ARCON = 0x00 ; // Start Normalizing
  61          // while(MD3_7==0 ); //check MDU finish flag
  62          //  dat.ss1.Byte0=MD0;
  63          //  dat.ss1.Byte1=MD1;
  64          //  dat.ss1.Byte2=MD2;
  65          //  dat.ss1.Byte3=MD3;
  66          // 
  67          //   return dat.Ldata ;
  68          //}
  69          
  70          
  71          /*
  72           * @fn    sin32
  73           *
  74           * @brief sin32
  75           * 
  76          * @param  none
  77           * _IQsin(X) ,  =sin(X), X is in degree
  78          
  79           *
  80           * @return  value in IQ
  81           */
  82          
  83          
  84          
  85          
  86          
  87          
  88          
  89          _iq _IQsin(_iq A)
  90          {
  91   1      
  92   1        X=_IQabs(A);
  93   1        
  94   1          
  95   1        //limtit the search anlge to <360)
  96   1        
  97   1        while (X>=_IQ(360.0))
  98   1            {
  99   2              X-=_IQ(360.0);
 100   2            }
 101   1        
 102   1        
 103   1        // convert angle to data in sin table, angle =angle/360 * 512  or  =angle *64/45
 104   1            
 105   1        X=_IQmpy(X,_IQ(1.422222));
 106   1        X=_IQint(X);          //convert to integer
 107   1        Z=XWORD[X+sin_table];
 108   1        Z=BarrelShift(Z,(LL_shift+16));                       //sin table is in Q15 format, it need to convert to Q31 first
             - by shifting 16 bit to left
 109   1        Z=BarrelShift(Z, (RA_shift+ (30 - GLOBAL_Q)));      //convert Q31 to global Q format
 110   1      
 111   1        if (A<0) Z=-(Z);
 112   1      
 113   1      return Z ;
 114   1        
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 3   

 115   1      }
 116          
 117          
 118          
 119          
 120          
 121          
 122          
 123          
 124          
 125          /*
 126           * @fn    sqrt32
 127           *
 128           * @brief sqrt32
 129           * 
 130           * @param none
 131           * _IQsqrt(X) ,  sqrt(X)
 132          
 133           *
 134           * @return  sqrt value in IQ
 135           */
 136          
 137          
 138          
 139          
 140          
 141          
 142          _iq _IQsqrt(_iq A)
 143          
 144          {
 145   1      
 146   1        if (A<0) return 0;
 147   1      
 148   1        X=Normalize(A);   //convert to Q30 format
 149   1        index=(31-GLOBAL_Q-ARCON);
 150   1        
 151   1        if (index %2==0)                //check if the power is even or  odd value  
 152   1        {
 153   2        X &=0x7fffffff;
 154   2        X=BarrelShift(X, (RA_shift+23))+128;  
 155   2          
 156   2          Z=XWORD[X+sqrt_table];
 157   2        }
 158   1        else
 159   1        {
 160   2          index++;                             //if the power is odd value , divide t by 2
 161   2        
 162   2          X =BarrelShift(X,(RA_shift+24));             //square root in value is divided by 2 
 163   2          X &=0x0000007f;
 164   2          Z=XWORD[X+sqrt_table];
 165   2        }
 166   1        Z=BarrelShift(Z,(LL_shift+16));                       //sqrt table is in Q15 format, it need to convert to Q31 firs
             -t by shifting 16 bit to left
 167   1        Z=BarrelShift(Z, (RA_shift+ (30 - GLOBAL_Q)));      //convert Q31 to global Q format
 168   1        
 169   1      
 170   1        
 171   1        if (index>=0)
 172   1        Z=BarrelShift(Z, (LA_shift+(index/2)));
 173   1        else Z=BarrelShift(Z,(RA_shift+((-index)/2)));
 174   1        
 175   1      return  Z;
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 4   

 176   1      }
 177          
 178          
 179          /*
 180           * @fn    atan32
 181           *
 182           * @brief atan32
 183           * 
 184           * @param none
 185           * _IQatan2(Y,X) ,  atan2(Y/X)
 186           * _IQatan(Y)    , =atan2(Y/1)
 187           *
 188          
 189          
 190           * @return  angle in degree
 191           */
 192          
 193          _iq _IQatan2(_iq A, _iq B)
 194          {
 195   1        Y=_IQabs(A);
 196   1        X=_IQabs(B);
 197   1      
 198   1        
 199   1        if (X>Y)
 200   1          {
 201   2            
 202   2            
 203   2            
 204   2            Y=BarrelShift(Y,(LA_shift+5));  
 205   2            X=BarrelShift(X,(RA_shift+4));  
 206   2            X=Y/X;
 207   2          
 208   2          
 209   2            index=pos;
 210   2          
 211   2           
 212   2      
 213   2          }
 214   1          else
 215   1          {
 216   2            X=BarrelShift(X,(LA_shift+5)); ;
 217   2            Y=BarrelShift(Y,(RA_shift+4)); 
 218   2            X=X/Y;
 219   2      
 220   2            
 221   2            index=neg;
 222   2          }
 223   1            
 224   1            
 225   1            
 226   1          Z=XWORD[X+atan_table];
 227   1          Z=Z*45;                 //Z=(Z/4096)*45 degree
 228   1          Z=BarrelShift(Z,(LL_shift+12));                       //sin table is in Q15 format, it need to convert to Q31 firs
             -t by shifting 16 bit to left
 229   1          Z=BarrelShift(Z, (RA_shift+ (24 - GLOBAL_Q)));      //convert Q31 to global Q format
 230   1          
 231   1          
 232   1          if (index==neg) Z=_IQ(90.0)-Z;
 233   1          
 234   1        if ((A<0)&&(B>0))
 235   1          Z=_IQ(180.0)-Z;
 236   1          else if ((A<0)&&(B<0))
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 5   

 237   1            Z=_IQ(180.0)+Z;
 238   1          else if ((A>0)&&(B<0))
 239   1            Z=_IQ(360.0)-Z;
 240   1        
 241   1        
 242   1      
 243   1      return Z; 
 244   1      }
 245          
 246          
 247          _iq _IQmag(_iq A, _iq B) 
 248          {
 249   1        X=_IQmpy(A,A)+_IQmpy(B,B);
 250   1        Z=_IQsqrt(X);
 251   1        return Z;
 252   1        
 253   1      }
 254          
 255          
 256          
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION __IQ15sin (BEGIN)
                                           ; SOURCE LINE # 89
0000 8F00        R     MOV     A+03H,R7
0002 8E00        R     MOV     A+02H,R6
0004 8D00        R     MOV     A+01H,R5
0006 8C00        R     MOV     A,R4
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 92
0008 AF00        R     MOV     R7,A+03H
000A AE00        R     MOV     R6,A+02H
000C AD00        R     MOV     R5,A+01H
000E AC00        R     MOV     R4,A
0010 120000      E     LCALL   __IQabs
0013 8F00        R     MOV     X+03H,R7
0015 8E00        R     MOV     X+02H,R6
0017 8D00        R     MOV     X+01H,R5
0019 8C00        R     MOV     X,R4
001B         ?C0001:
                                           ; SOURCE LINE # 97
001B 7F00              MOV     R7,#00H
001D 7E00              MOV     R6,#00H
001F 7DB4              MOV     R5,#0B4H
0021 7C00              MOV     R4,#00H
0023 AB00        R     MOV     R3,X+03H
0025 AA00        R     MOV     R2,X+02H
0027 A900        R     MOV     R1,X+01H
0029 A800        R     MOV     R0,X
002B C3                CLR     C
002C 120000      E     LCALL   ?C?SLCMP
002F 401B              JC      ?C0002
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
0031 C3                CLR     C
0032 E500        R     MOV     A,X+03H
0034 9400              SUBB    A,#00H
0036 F500        R     MOV     X+03H,A
0038 E500        R     MOV     A,X+02H
003A 9400              SUBB    A,#00H
003C F500        R     MOV     X+02H,A
003E E500        R     MOV     A,X+01H
0040 94B4              SUBB    A,#0B4H
0042 F500        R     MOV     X+01H,A
0044 E500        R     MOV     A,X
0046 9400              SUBB    A,#00H
0048 F500        R     MOV     X,A
                                           ; SOURCE LINE # 100
004A 80CF              SJMP    ?C0001
004C         ?C0002:
                                           ; SOURCE LINE # 105
004C 750028      E     MOV     ?_BarrelShift?BYTE+04H,#028H
004F 7F0B              MOV     R7,#0BH
0051 7EB6              MOV     R6,#0B6H
0053 7D00              MOV     R5,#00H
0055 7C00              MOV     R4,#00H
0057 120000      E     LCALL   _BarrelShift
005A C004              PUSH    AR4
005C C005              PUSH    AR5
005E C006              PUSH    AR6
0060 C007              PUSH    AR7
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 7   

0062 AF00        R     MOV     R7,X+03H
0064 AE00        R     MOV     R6,X+02H
0066 AD00        R     MOV     R5,X+01H
0068 AC00        R     MOV     R4,X
006A 750027      E     MOV     ?_BarrelShift?BYTE+04H,#027H
006D 120000      E     LCALL   _BarrelShift
0070 A804              MOV     R0,AR4
0072 A905              MOV     R1,AR5
0074 AA06              MOV     R2,AR6
0076 AB07              MOV     R3,AR7
0078 D007              POP     AR7
007A D006              POP     AR6
007C D005              POP     AR5
007E D004              POP     AR4
0080 120000      E     LCALL   ?C?LMUL
0083 8F00        R     MOV     X+03H,R7
0085 8E00        R     MOV     X+02H,R6
0087 8D00        R     MOV     X+01H,R5
0089 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 106
008B AF00        R     MOV     R7,X+03H
008D AE00        R     MOV     R6,X+02H
008F AD00        R     MOV     R5,X+01H
0091 AC00        R     MOV     R4,X
0093 75002F      E     MOV     ?_BarrelShift?BYTE+04H,#02FH
0096 120000      E     LCALL   _BarrelShift
0099 8F00        R     MOV     X+03H,R7
009B 8E00        R     MOV     X+02H,R6
009D 8D00        R     MOV     X+01H,R5
009F 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 107
00A1 7F02              MOV     R7,#02H
00A3 7E00              MOV     R6,#00H
00A5 7D00              MOV     R5,#00H
00A7 7C00              MOV     R4,#00H
00A9 AB00        R     MOV     R3,X+03H
00AB AA00        R     MOV     R2,X+02H
00AD A900        R     MOV     R1,X+01H
00AF A800        R     MOV     R0,X
00B1 120000      E     LCALL   ?C?LMUL
00B4 8F82              MOV     DPL,R7
00B6 8E83              MOV     DPH,R6
00B8 E0                MOVX    A,@DPTR
00B9 FE                MOV     R6,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC FF                MOV     R7,A
00BD E4                CLR     A
00BE FC                MOV     R4,A
00BF FD                MOV     R5,A
00C0 8F00        R     MOV     Z+03H,R7
00C2 8E00        R     MOV     Z+02H,R6
00C4 8D00        R     MOV     Z+01H,R5
00C6 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 108
00C8 AF00        R     MOV     R7,Z+03H
00CA AE00        R     MOV     R6,Z+02H
00CC AD00        R     MOV     R5,Z+01H
00CE AC00        R     MOV     R4,Z
00D0 750090      E     MOV     ?_BarrelShift?BYTE+04H,#090H
00D3 120000      E     LCALL   _BarrelShift
00D6 8F00        R     MOV     Z+03H,R7
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 8   

00D8 8E00        R     MOV     Z+02H,R6
00DA 8D00        R     MOV     Z+01H,R5
00DC 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 109
00DE AF00        R     MOV     R7,Z+03H
00E0 AE00        R     MOV     R6,Z+02H
00E2 AD00        R     MOV     R5,Z+01H
00E4 AC00        R     MOV     R4,Z
00E6 75002F      E     MOV     ?_BarrelShift?BYTE+04H,#02FH
00E9 120000      E     LCALL   _BarrelShift
00EC 8F00        R     MOV     Z+03H,R7
00EE 8E00        R     MOV     Z+02H,R6
00F0 8D00        R     MOV     Z+01H,R5
00F2 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 111
00F4 7F00              MOV     R7,#00H
00F6 7E00              MOV     R6,#00H
00F8 7D00              MOV     R5,#00H
00FA 7C00              MOV     R4,#00H
00FC AB00        R     MOV     R3,A+03H
00FE AA00        R     MOV     R2,A+02H
0100 A900        R     MOV     R1,A+01H
0102 A800        R     MOV     R0,A
0104 C3                CLR     C
0105 120000      E     LCALL   ?C?SLCMP
0108 5013              JNC     ?C0003
010A AF00        R     MOV     R7,Z+03H
010C AE00        R     MOV     R6,Z+02H
010E AD00        R     MOV     R5,Z+01H
0110 AC00        R     MOV     R4,Z
0112 120000      E     LCALL   ?C?LNEG
0115 8F00        R     MOV     Z+03H,R7
0117 8E00        R     MOV     Z+02H,R6
0119 8D00        R     MOV     Z+01H,R5
011B 8C00        R     MOV     Z,R4
011D         ?C0003:
                                           ; SOURCE LINE # 113
011D AF00        R     MOV     R7,Z+03H
011F AE00        R     MOV     R6,Z+02H
0121 AD00        R     MOV     R5,Z+01H
0123 AC00        R     MOV     R4,Z
                                           ; SOURCE LINE # 115
0125         ?C0004:
0125 22                RET     
             ; FUNCTION __IQ15sin (END)

             ; FUNCTION __IQ15sqrt (BEGIN)
                                           ; SOURCE LINE # 142
0000 8F00        R     MOV     A+03H,R7
0002 8E00        R     MOV     A+02H,R6
0004 8D00        R     MOV     A+01H,R5
0006 8C00        R     MOV     A,R4
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 146
0008 7F00              MOV     R7,#00H
000A 7E00              MOV     R6,#00H
000C 7D00              MOV     R5,#00H
000E 7C00              MOV     R4,#00H
0010 AB00        R     MOV     R3,A+03H
0012 AA00        R     MOV     R2,A+02H
0014 A900        R     MOV     R1,A+01H
0016 A800        R     MOV     R0,A
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 9   

0018 C3                CLR     C
0019 120000      E     LCALL   ?C?SLCMP
001C 5009              JNC     ?C0005
001E 7F00              MOV     R7,#00H
0020 7E00              MOV     R6,#00H
0022 7D00              MOV     R5,#00H
0024 7C00              MOV     R4,#00H
0026 22                RET     
0027         ?C0005:
                                           ; SOURCE LINE # 148
0027 AF00        R     MOV     R7,A+03H
0029 AE00        R     MOV     R6,A+02H
002B AD00        R     MOV     R5,A+01H
002D AC00        R     MOV     R4,A
002F 120000      E     LCALL   _Normalize
0032 8F00        R     MOV     X+03H,R7
0034 8E00        R     MOV     X+02H,R6
0036 8D00        R     MOV     X+01H,R5
0038 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 149
003A C3                CLR     C
003B 7410              MOV     A,#010H
003D 95EF              SUBB    A,ARCON
003F F500        R     MOV     index,A
                                           ; SOURCE LINE # 151
0041 E500        R     MOV     A,index
0043 75F002            MOV     B,#02H
0046 120000      E     LCALL   ?C?SCDIV
0049 AFF0              MOV     R7,B
004B EF                MOV     A,R7
004C 7068              JNZ     ?C0007
                                           ; SOURCE LINE # 152
                                           ; SOURCE LINE # 153
004E E500        R     MOV     A,X+03H
0050 54FF              ANL     A,#0FFH
0052 F500        R     MOV     X+03H,A
0054 E500        R     MOV     A,X+02H
0056 54FF              ANL     A,#0FFH
0058 F500        R     MOV     X+02H,A
005A E500        R     MOV     A,X+01H
005C 54FF              ANL     A,#0FFH
005E F500        R     MOV     X+01H,A
0060 E500        R     MOV     A,X
0062 547F              ANL     A,#07FH
0064 F500        R     MOV     X,A
                                           ; SOURCE LINE # 154
0066 AF00        R     MOV     R7,X+03H
0068 AE00        R     MOV     R6,X+02H
006A AD00        R     MOV     R5,X+01H
006C AC00        R     MOV     R4,X
006E 750037      E     MOV     ?_BarrelShift?BYTE+04H,#037H
0071 120000      E     LCALL   _BarrelShift
0074 EF                MOV     A,R7
0075 2480              ADD     A,#080H
0077 F500        R     MOV     X+03H,A
0079 EE                MOV     A,R6
007A 3400              ADDC    A,#00H
007C F500        R     MOV     X+02H,A
007E ED                MOV     A,R5
007F 3400              ADDC    A,#00H
0081 F500        R     MOV     X+01H,A
0083 EC                MOV     A,R4
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 10  

0084 3400              ADDC    A,#00H
0086 F500        R     MOV     X,A
                                           ; SOURCE LINE # 156
0088 7F02              MOV     R7,#02H
008A 7E00              MOV     R6,#00H
008C 7D00              MOV     R5,#00H
008E 7C00              MOV     R4,#00H
0090 AB00        R     MOV     R3,X+03H
0092 AA00        R     MOV     R2,X+02H
0094 A900        R     MOV     R1,X+01H
0096 A800        R     MOV     R0,X
0098 120000      E     LCALL   ?C?LMUL
009B E4                CLR     A
009C 2F                ADD     A,R7
009D F582              MOV     DPL,A
009F 7408              MOV     A,#08H
00A1 3E                ADDC    A,R6
00A2 F583              MOV     DPH,A
00A4 E0                MOVX    A,@DPTR
00A5 FE                MOV     R6,A
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
00A9 E4                CLR     A
00AA FC                MOV     R4,A
00AB FD                MOV     R5,A
00AC 8F00        R     MOV     Z+03H,R7
00AE 8E00        R     MOV     Z+02H,R6
00B0 8D00        R     MOV     Z+01H,R5
00B2 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 157
00B4 805C              SJMP    ?C0008
00B6         ?C0007:
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
00B6 0500        R     INC     index
                                           ; SOURCE LINE # 162
00B8 AF00        R     MOV     R7,X+03H
00BA AE00        R     MOV     R6,X+02H
00BC AD00        R     MOV     R5,X+01H
00BE AC00        R     MOV     R4,X
00C0 750038      E     MOV     ?_BarrelShift?BYTE+04H,#038H
00C3 120000      E     LCALL   _BarrelShift
00C6 8F00        R     MOV     X+03H,R7
00C8 8E00        R     MOV     X+02H,R6
00CA 8D00        R     MOV     X+01H,R5
00CC 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 163
00CE E500        R     MOV     A,X+03H
00D0 547F              ANL     A,#07FH
00D2 F500        R     MOV     X+03H,A
00D4 E500        R     MOV     A,X+02H
00D6 5400              ANL     A,#00H
00D8 F500        R     MOV     X+02H,A
00DA E500        R     MOV     A,X+01H
00DC 5400              ANL     A,#00H
00DE F500        R     MOV     X+01H,A
00E0 E500        R     MOV     A,X
00E2 5400              ANL     A,#00H
00E4 F500        R     MOV     X,A
                                           ; SOURCE LINE # 164
00E6 7F02              MOV     R7,#02H
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 11  

00E8 7E00              MOV     R6,#00H
00EA 7D00              MOV     R5,#00H
00EC 7C00              MOV     R4,#00H
00EE AB00        R     MOV     R3,X+03H
00F0 AA00        R     MOV     R2,X+02H
00F2 A900        R     MOV     R1,X+01H
00F4 A800        R     MOV     R0,X
00F6 120000      E     LCALL   ?C?LMUL
00F9 E4                CLR     A
00FA 2F                ADD     A,R7
00FB F582              MOV     DPL,A
00FD 7408              MOV     A,#08H
00FF 3E                ADDC    A,R6
0100 F583              MOV     DPH,A
0102 E0                MOVX    A,@DPTR
0103 FE                MOV     R6,A
0104 A3                INC     DPTR
0105 E0                MOVX    A,@DPTR
0106 FF                MOV     R7,A
0107 E4                CLR     A
0108 FC                MOV     R4,A
0109 FD                MOV     R5,A
010A 8F00        R     MOV     Z+03H,R7
010C 8E00        R     MOV     Z+02H,R6
010E 8D00        R     MOV     Z+01H,R5
0110 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 165
0112         ?C0008:
                                           ; SOURCE LINE # 166
0112 AF00        R     MOV     R7,Z+03H
0114 AE00        R     MOV     R6,Z+02H
0116 AD00        R     MOV     R5,Z+01H
0118 AC00        R     MOV     R4,Z
011A 750090      E     MOV     ?_BarrelShift?BYTE+04H,#090H
011D 120000      E     LCALL   _BarrelShift
0120 8F00        R     MOV     Z+03H,R7
0122 8E00        R     MOV     Z+02H,R6
0124 8D00        R     MOV     Z+01H,R5
0126 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 167
0128 AF00        R     MOV     R7,Z+03H
012A AE00        R     MOV     R6,Z+02H
012C AD00        R     MOV     R5,Z+01H
012E AC00        R     MOV     R4,Z
0130 75002F      E     MOV     ?_BarrelShift?BYTE+04H,#02FH
0133 120000      E     LCALL   _BarrelShift
0136 8F00        R     MOV     Z+03H,R7
0138 8E00        R     MOV     Z+02H,R6
013A 8D00        R     MOV     Z+01H,R5
013C 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 171
013E C3                CLR     C
013F E500        R     MOV     A,index
0141 6480              XRL     A,#080H
0143 9480              SUBB    A,#080H
0145 4020              JC      ?C0009
                                           ; SOURCE LINE # 172
0147 AF00        R     MOV     R7,Z+03H
0149 AE00        R     MOV     R6,Z+02H
014B AD00        R     MOV     R5,Z+01H
014D AC00        R     MOV     R4,Z
014F E500        R     MOV     A,index
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 12  

0151 A2E7              MOV     C,ACC.7
0153 13                RRC     A
0154 FB                MOV     R3,A
0155 EB                MOV     A,R3
0156 24A0              ADD     A,#0A0H
0158 F500        E     MOV     ?_BarrelShift?BYTE+04H,A
015A 120000      E     LCALL   _BarrelShift
015D 8F00        R     MOV     Z+03H,R7
015F 8E00        R     MOV     Z+02H,R6
0161 8D00        R     MOV     Z+01H,R5
0163 8C00        R     MOV     Z,R4
0165 8022              SJMP    ?C0010
0167         ?C0009:
                                           ; SOURCE LINE # 173
0167 AF00        R     MOV     R7,Z+03H
0169 AE00        R     MOV     R6,Z+02H
016B AD00        R     MOV     R5,Z+01H
016D AC00        R     MOV     R4,Z
016F E500        R     MOV     A,index
0171 F4                CPL     A
0172 04                INC     A
0173 FB                MOV     R3,A
0174 EB                MOV     A,R3
0175 A2E7              MOV     C,ACC.7
0177 13                RRC     A
0178 FB                MOV     R3,A
0179 EB                MOV     A,R3
017A 2420              ADD     A,#020H
017C F500        E     MOV     ?_BarrelShift?BYTE+04H,A
017E 120000      E     LCALL   _BarrelShift
0181 8F00        R     MOV     Z+03H,R7
0183 8E00        R     MOV     Z+02H,R6
0185 8D00        R     MOV     Z+01H,R5
0187 8C00        R     MOV     Z,R4
0189         ?C0010:
                                           ; SOURCE LINE # 175
0189 AF00        R     MOV     R7,Z+03H
018B AE00        R     MOV     R6,Z+02H
018D AD00        R     MOV     R5,Z+01H
018F AC00        R     MOV     R4,Z
                                           ; SOURCE LINE # 176
0191         ?C0006:
0191 22                RET     
             ; FUNCTION __IQ15sqrt (END)

             ; FUNCTION __IQ15atan2 (BEGIN)
                                           ; SOURCE LINE # 193
0000 8F00        R     MOV     A+03H,R7
0002 8E00        R     MOV     A+02H,R6
0004 8D00        R     MOV     A+01H,R5
0006 8C00        R     MOV     A,R4
                                           ; SOURCE LINE # 194
                                           ; SOURCE LINE # 195
0008 AF00        R     MOV     R7,A+03H
000A AE00        R     MOV     R6,A+02H
000C AD00        R     MOV     R5,A+01H
000E AC00        R     MOV     R4,A
0010 120000      E     LCALL   __IQabs
0013 8F00        R     MOV     Y+03H,R7
0015 8E00        R     MOV     Y+02H,R6
0017 8D00        R     MOV     Y+01H,R5
0019 8C00        R     MOV     Y,R4
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 13  

                                           ; SOURCE LINE # 196
001B AF00        R     MOV     R7,B+03H
001D AE00        R     MOV     R6,B+02H
001F AD00        R     MOV     R5,B+01H
0021 AC00        R     MOV     R4,B
0023 120000      E     LCALL   __IQabs
0026 8F00        R     MOV     X+03H,R7
0028 8E00        R     MOV     X+02H,R6
002A 8D00        R     MOV     X+01H,R5
002C 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 199
002E AF00        R     MOV     R7,Y+03H
0030 AE00        R     MOV     R6,Y+02H
0032 AD00        R     MOV     R5,Y+01H
0034 AC00        R     MOV     R4,Y
0036 AB00        R     MOV     R3,X+03H
0038 AA00        R     MOV     R2,X+02H
003A A900        R     MOV     R1,X+01H
003C A800        R     MOV     R0,X
003E D3                SETB    C
003F 120000      E     LCALL   ?C?SLCMP
0042 404C              JC      ?C0011
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 204
0044 AF00        R     MOV     R7,Y+03H
0046 AE00        R     MOV     R6,Y+02H
0048 AD00        R     MOV     R5,Y+01H
004A AC00        R     MOV     R4,Y
004C 7500A5      E     MOV     ?_BarrelShift?BYTE+04H,#0A5H
004F 120000      E     LCALL   _BarrelShift
0052 8F00        R     MOV     Y+03H,R7
0054 8E00        R     MOV     Y+02H,R6
0056 8D00        R     MOV     Y+01H,R5
0058 8C00        R     MOV     Y,R4
                                           ; SOURCE LINE # 205
005A AF00        R     MOV     R7,X+03H
005C AE00        R     MOV     R6,X+02H
005E AD00        R     MOV     R5,X+01H
0060 AC00        R     MOV     R4,X
0062 750024      E     MOV     ?_BarrelShift?BYTE+04H,#024H
0065 120000      E     LCALL   _BarrelShift
0068 8F00        R     MOV     X+03H,R7
006A 8E00        R     MOV     X+02H,R6
006C 8D00        R     MOV     X+01H,R5
006E 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 206
0070 AB00        R     MOV     R3,X+03H
0072 AA00        R     MOV     R2,X+02H
0074 A900        R     MOV     R1,X+01H
0076 A800        R     MOV     R0,X
0078 AF00        R     MOV     R7,Y+03H
007A AE00        R     MOV     R6,Y+02H
007C AD00        R     MOV     R5,Y+01H
007E AC00        R     MOV     R4,Y
0080 120000      E     LCALL   ?C?SLDIV
0083 8F00        R     MOV     X+03H,R7
0085 8E00        R     MOV     X+02H,R6
0087 8D00        R     MOV     X+01H,R5
0089 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 209
008B 750000      R     MOV     index,#00H
                                           ; SOURCE LINE # 213
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 14  

008E 804A              SJMP    ?C0012
0090         ?C0011:
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
0090 AF00        R     MOV     R7,X+03H
0092 AE00        R     MOV     R6,X+02H
0094 AD00        R     MOV     R5,X+01H
0096 AC00        R     MOV     R4,X
0098 7500A5      E     MOV     ?_BarrelShift?BYTE+04H,#0A5H
009B 120000      E     LCALL   _BarrelShift
009E 8F00        R     MOV     X+03H,R7
00A0 8E00        R     MOV     X+02H,R6
00A2 8D00        R     MOV     X+01H,R5
00A4 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 217
00A6 AF00        R     MOV     R7,Y+03H
00A8 AE00        R     MOV     R6,Y+02H
00AA AD00        R     MOV     R5,Y+01H
00AC AC00        R     MOV     R4,Y
00AE 750024      E     MOV     ?_BarrelShift?BYTE+04H,#024H
00B1 120000      E     LCALL   _BarrelShift
00B4 8F00        R     MOV     Y+03H,R7
00B6 8E00        R     MOV     Y+02H,R6
00B8 8D00        R     MOV     Y+01H,R5
00BA 8C00        R     MOV     Y,R4
                                           ; SOURCE LINE # 218
00BC AF00        R     MOV     R7,X+03H
00BE AE00        R     MOV     R6,X+02H
00C0 AD00        R     MOV     R5,X+01H
00C2 AC00        R     MOV     R4,X
00C4 AB00        R     MOV     R3,Y+03H
00C6 AA00        R     MOV     R2,Y+02H
00C8 A900        R     MOV     R1,Y+01H
00CA A800        R     MOV     R0,Y
00CC 120000      E     LCALL   ?C?SLDIV
00CF 8F00        R     MOV     X+03H,R7
00D1 8E00        R     MOV     X+02H,R6
00D3 8D00        R     MOV     X+01H,R5
00D5 8C00        R     MOV     X,R4
                                           ; SOURCE LINE # 221
00D7 750001      R     MOV     index,#01H
                                           ; SOURCE LINE # 222
00DA         ?C0012:
                                           ; SOURCE LINE # 226
00DA 7F02              MOV     R7,#02H
00DC 7E00              MOV     R6,#00H
00DE 7D00              MOV     R5,#00H
00E0 7C00              MOV     R4,#00H
00E2 AB00        R     MOV     R3,X+03H
00E4 AA00        R     MOV     R2,X+02H
00E6 A900        R     MOV     R1,X+01H
00E8 A800        R     MOV     R0,X
00EA 120000      E     LCALL   ?C?LMUL
00ED E4                CLR     A
00EE 2F                ADD     A,R7
00EF F582              MOV     DPL,A
00F1 740C              MOV     A,#0CH
00F3 3E                ADDC    A,R6
00F4 F583              MOV     DPH,A
00F6 E0                MOVX    A,@DPTR
00F7 FE                MOV     R6,A
00F8 A3                INC     DPTR
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 15  

00F9 E0                MOVX    A,@DPTR
00FA FF                MOV     R7,A
00FB E4                CLR     A
00FC FC                MOV     R4,A
00FD FD                MOV     R5,A
00FE 8F00        R     MOV     Z+03H,R7
0100 8E00        R     MOV     Z+02H,R6
0102 8D00        R     MOV     Z+01H,R5
0104 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 227
0106 AF00        R     MOV     R7,Z+03H
0108 AE00        R     MOV     R6,Z+02H
010A AD00        R     MOV     R5,Z+01H
010C AC00        R     MOV     R4,Z
010E 7B2D              MOV     R3,#02DH
0110 7A00              MOV     R2,#00H
0112 7900              MOV     R1,#00H
0114 7800              MOV     R0,#00H
0116 120000      E     LCALL   ?C?LMUL
0119 8F00        R     MOV     Z+03H,R7
011B 8E00        R     MOV     Z+02H,R6
011D 8D00        R     MOV     Z+01H,R5
011F 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 228
0121 AF00        R     MOV     R7,Z+03H
0123 AE00        R     MOV     R6,Z+02H
0125 AD00        R     MOV     R5,Z+01H
0127 AC00        R     MOV     R4,Z
0129 75008C      E     MOV     ?_BarrelShift?BYTE+04H,#08CH
012C 120000      E     LCALL   _BarrelShift
012F 8F00        R     MOV     Z+03H,R7
0131 8E00        R     MOV     Z+02H,R6
0133 8D00        R     MOV     Z+01H,R5
0135 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 229
0137 AF00        R     MOV     R7,Z+03H
0139 AE00        R     MOV     R6,Z+02H
013B AD00        R     MOV     R5,Z+01H
013D AC00        R     MOV     R4,Z
013F 750029      E     MOV     ?_BarrelShift?BYTE+04H,#029H
0142 120000      E     LCALL   _BarrelShift
0145 8F00        R     MOV     Z+03H,R7
0147 8E00        R     MOV     Z+02H,R6
0149 8D00        R     MOV     Z+01H,R5
014B 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 232
014D E500        R     MOV     A,index
014F B40116            CJNE    A,#01H,?C0013
0152 C3                CLR     C
0153 E4                CLR     A
0154 9500        R     SUBB    A,Z+03H
0156 F500        R     MOV     Z+03H,A
0158 E4                CLR     A
0159 9500        R     SUBB    A,Z+02H
015B F500        R     MOV     Z+02H,A
015D 742D              MOV     A,#02DH
015F 9500        R     SUBB    A,Z+01H
0161 F500        R     MOV     Z+01H,A
0163 E4                CLR     A
0164 9500        R     SUBB    A,Z
0166 F500        R     MOV     Z,A
0168         ?C0013:
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 16  

                                           ; SOURCE LINE # 234
0168 7F00              MOV     R7,#00H
016A 7E00              MOV     R6,#00H
016C 7D00              MOV     R5,#00H
016E 7C00              MOV     R4,#00H
0170 AB00        R     MOV     R3,A+03H
0172 AA00        R     MOV     R2,A+02H
0174 A900        R     MOV     R1,A+01H
0176 A800        R     MOV     R0,A
0178 C3                CLR     C
0179 120000      E     LCALL   ?C?SLCMP
017C 502F              JNC     ?C0014
017E 7F00              MOV     R7,#00H
0180 7E00              MOV     R6,#00H
0182 7D00              MOV     R5,#00H
0184 7C00              MOV     R4,#00H
0186 AB00        R     MOV     R3,B+03H
0188 AA00        R     MOV     R2,B+02H
018A A900        R     MOV     R1,B+01H
018C A800        R     MOV     R0,B
018E D3                SETB    C
018F 120000      E     LCALL   ?C?SLCMP
0192 4019              JC      ?C0014
                                           ; SOURCE LINE # 235
0194 C3                CLR     C
0195 E4                CLR     A
0196 9500        R     SUBB    A,Z+03H
0198 F500        R     MOV     Z+03H,A
019A E4                CLR     A
019B 9500        R     SUBB    A,Z+02H
019D F500        R     MOV     Z+02H,A
019F 745A              MOV     A,#05AH
01A1 9500        R     SUBB    A,Z+01H
01A3 F500        R     MOV     Z+01H,A
01A5 E4                CLR     A
01A6 9500        R     SUBB    A,Z
01A8 F500        R     MOV     Z,A
01AA 020000      R     LJMP    ?C0015
01AD         ?C0014:
                                           ; SOURCE LINE # 236
01AD 7F00              MOV     R7,#00H
01AF 7E00              MOV     R6,#00H
01B1 7D00              MOV     R5,#00H
01B3 7C00              MOV     R4,#00H
01B5 AB00        R     MOV     R3,A+03H
01B7 AA00        R     MOV     R2,A+02H
01B9 A900        R     MOV     R1,A+01H
01BB A800        R     MOV     R0,A
01BD C3                CLR     C
01BE 120000      E     LCALL   ?C?SLCMP
01C1 5030              JNC     ?C0016
01C3 7F00              MOV     R7,#00H
01C5 7E00              MOV     R6,#00H
01C7 7D00              MOV     R5,#00H
01C9 7C00              MOV     R4,#00H
01CB AB00        R     MOV     R3,B+03H
01CD AA00        R     MOV     R2,B+02H
01CF A900        R     MOV     R1,B+01H
01D1 A800        R     MOV     R0,B
01D3 C3                CLR     C
01D4 120000      E     LCALL   ?C?SLCMP
01D7 501A              JNC     ?C0016
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 17  

                                           ; SOURCE LINE # 237
01D9 E500        R     MOV     A,Z+03H
01DB 2400              ADD     A,#00H
01DD F500        R     MOV     Z+03H,A
01DF E500        R     MOV     A,Z+02H
01E1 3400              ADDC    A,#00H
01E3 F500        R     MOV     Z+02H,A
01E5 E500        R     MOV     A,Z+01H
01E7 345A              ADDC    A,#05AH
01E9 F500        R     MOV     Z+01H,A
01EB E500        R     MOV     A,Z
01ED 3400              ADDC    A,#00H
01EF F500        R     MOV     Z,A
01F1 8042              SJMP    ?C0015
01F3         ?C0016:
                                           ; SOURCE LINE # 238
01F3 7F00              MOV     R7,#00H
01F5 7E00              MOV     R6,#00H
01F7 7D00              MOV     R5,#00H
01F9 7C00              MOV     R4,#00H
01FB AB00        R     MOV     R3,A+03H
01FD AA00        R     MOV     R2,A+02H
01FF A900        R     MOV     R1,A+01H
0201 A800        R     MOV     R0,A
0203 D3                SETB    C
0204 120000      E     LCALL   ?C?SLCMP
0207 402C              JC      ?C0015
0209 7F00              MOV     R7,#00H
020B 7E00              MOV     R6,#00H
020D 7D00              MOV     R5,#00H
020F 7C00              MOV     R4,#00H
0211 AB00        R     MOV     R3,B+03H
0213 AA00        R     MOV     R2,B+02H
0215 A900        R     MOV     R1,B+01H
0217 A800        R     MOV     R0,B
0219 C3                CLR     C
021A 120000      E     LCALL   ?C?SLCMP
021D 5016              JNC     ?C0015
                                           ; SOURCE LINE # 239
021F C3                CLR     C
0220 E4                CLR     A
0221 9500        R     SUBB    A,Z+03H
0223 F500        R     MOV     Z+03H,A
0225 E4                CLR     A
0226 9500        R     SUBB    A,Z+02H
0228 F500        R     MOV     Z+02H,A
022A 74B4              MOV     A,#0B4H
022C 9500        R     SUBB    A,Z+01H
022E F500        R     MOV     Z+01H,A
0230 E4                CLR     A
0231 9500        R     SUBB    A,Z
0233 F500        R     MOV     Z,A
0235         ?C0018:
0235         ?C0017:
0235         ?C0015:
                                           ; SOURCE LINE # 243
0235 AF00        R     MOV     R7,Z+03H
0237 AE00        R     MOV     R6,Z+02H
0239 AD00        R     MOV     R5,Z+01H
023B AC00        R     MOV     R4,Z
                                           ; SOURCE LINE # 244
023D         ?C0019:
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 18  

023D 22                RET     
             ; FUNCTION __IQ15atan2 (END)

             ; FUNCTION __IQ15mag (BEGIN)
                                           ; SOURCE LINE # 247
0000 8F00        R     MOV     A+03H,R7
0002 8E00        R     MOV     A+02H,R6
0004 8D00        R     MOV     A+01H,R5
0006 8C00        R     MOV     A,R4
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 249
0008 AF00        R     MOV     R7,B+03H
000A AE00        R     MOV     R6,B+02H
000C AD00        R     MOV     R5,B+01H
000E AC00        R     MOV     R4,B
0010 750028      E     MOV     ?_BarrelShift?BYTE+04H,#028H
0013 120000      E     LCALL   _BarrelShift
0016 C004              PUSH    AR4
0018 C005              PUSH    AR5
001A C006              PUSH    AR6
001C C007              PUSH    AR7
001E AF00        R     MOV     R7,B+03H
0020 AE00        R     MOV     R6,B+02H
0022 AD00        R     MOV     R5,B+01H
0024 AC00        R     MOV     R4,B
0026 750027      E     MOV     ?_BarrelShift?BYTE+04H,#027H
0029 120000      E     LCALL   _BarrelShift
002C A804              MOV     R0,AR4
002E A905              MOV     R1,AR5
0030 AA06              MOV     R2,AR6
0032 AB07              MOV     R3,AR7
0034 D007              POP     AR7
0036 D006              POP     AR6
0038 D005              POP     AR5
003A D004              POP     AR4
003C 120000      E     LCALL   ?C?LMUL
003F C004              PUSH    AR4
0041 C005              PUSH    AR5
0043 C006              PUSH    AR6
0045 C007              PUSH    AR7
0047 AF00        R     MOV     R7,A+03H
0049 AE00        R     MOV     R6,A+02H
004B AD00        R     MOV     R5,A+01H
004D AC00        R     MOV     R4,A
004F 750028      E     MOV     ?_BarrelShift?BYTE+04H,#028H
0052 120000      E     LCALL   _BarrelShift
0055 C004              PUSH    AR4
0057 C005              PUSH    AR5
0059 C006              PUSH    AR6
005B C007              PUSH    AR7
005D AF00        R     MOV     R7,A+03H
005F AE00        R     MOV     R6,A+02H
0061 AD00        R     MOV     R5,A+01H
0063 AC00        R     MOV     R4,A
0065 750027      E     MOV     ?_BarrelShift?BYTE+04H,#027H
0068 120000      E     LCALL   _BarrelShift
006B A804              MOV     R0,AR4
006D A905              MOV     R1,AR5
006F AA06              MOV     R2,AR6
0071 AB07              MOV     R3,AR7
0073 D007              POP     AR7
0075 D006              POP     AR6
C51 COMPILER V9.54   IQMATHLIB                                                             12/07/2018 13:54:35 PAGE 19  

0077 D005              POP     AR5
0079 D004              POP     AR4
007B 120000      E     LCALL   ?C?LMUL
007E A804              MOV     R0,AR4
0080 A905              MOV     R1,AR5
0082 AA06              MOV     R2,AR6
0084 AB07              MOV     R3,AR7
0086 D007              POP     AR7
0088 D006              POP     AR6
008A D005              POP     AR5
008C D004              POP     AR4
008E EB                MOV     A,R3
008F 2F                ADD     A,R7
0090 F500        R     MOV     X+03H,A
0092 EA                MOV     A,R2
0093 3E                ADDC    A,R6
0094 F500        R     MOV     X+02H,A
0096 E9                MOV     A,R1
0097 3D                ADDC    A,R5
0098 F500        R     MOV     X+01H,A
009A E8                MOV     A,R0
009B 3C                ADDC    A,R4
009C F500        R     MOV     X,A
                                           ; SOURCE LINE # 250
009E AF00        R     MOV     R7,X+03H
00A0 AE00        R     MOV     R6,X+02H
00A2 AD00        R     MOV     R5,X+01H
00A4 AC00        R     MOV     R4,X
00A6 120000      R     LCALL   __IQ15sqrt
00A9 8F00        R     MOV     Z+03H,R7
00AB 8E00        R     MOV     Z+02H,R6
00AD 8D00        R     MOV     Z+01H,R5
00AF 8C00        R     MOV     Z,R4
                                           ; SOURCE LINE # 251
00B1 AF00        R     MOV     R7,Z+03H
00B3 AE00        R     MOV     R6,Z+02H
00B5 AD00        R     MOV     R5,Z+01H
00B7 AC00        R     MOV     R4,Z
                                           ; SOURCE LINE # 253
00B9         ?C0020:
00B9 22                RET     
             ; FUNCTION __IQ15mag (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1456    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     41    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
