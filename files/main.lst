C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:28:27 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OUTPUT\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SRC\main.c OPTIMIZE(0,SPEED) REGFILE(.\OUTPUT\motor.ORC) BROWSE INTVECTO
                    -R(0X2000) INCDIR(.\INC) DEBUG OBJECTEXTEND CODE PRINT(.\files\main.lst) TABS(2) OBJECT(.\OUTPUT\main.obj)

line level    source

   1          #include "register.h"
   2          #include <intrins.h>
   3          #include "app.h"
   4          #include "initial.h"
   5          #include "lib.h"
   6          #include "ISD51.H"
   7          #include "epwm.h"
   8          
   9          #pragma mdu_r515          //use hardware math unit
  10          
  11          
  12          
  13           unsigned int ADresult;
  14           unsigned int data_value;
  15           
  16           unsigned char tmr3_ov,dac_value;
  17           unsigned long last_capture,this_capture, pwm_capture;
  18           
  19          U32 EE_data;
  20           
  21          
  22          void main(void)
  23          {
  24   1          #if ISDDebug == DISABLE_ISD
                  SystemClock();
                  #endif
  27   1          InitISDDebug(); 
  28   1      InitTimer3();        //timer 3 using P15 pin to capture pwm "low level" pulse width
  29   1        //InitTimer4();                          //start timer1
  30   1        InitTimer01();
  31   1      //  InitADC();                           //ADC use timer0 to trigger AD start
  32   1        
  33   1        InitDAC();
  34   1        
  35   1          InitGPIO();
  36   1        //  InitEXT();
  37   1        //InitComparator();
  38   1        
  39   1          EAL=1;
  40   1          while(1)
  41   1          {
  42   2            
  43   2           
  44   2        
  45   2            dac_value=(unsigned char)(pwm_capture>>11);
  46   2            DAC1_DAT=0x88;
  47   2            DAC2_DAT=0xff;
  48   2            
  49   2            
  50   2            
  51   2      //      EE_write(0x0a, 0xabcdef12);
  52   2      //      EE_data=EE_read(0x0a);
  53   2           
  54   2          
C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:28:27 PAGE 2   

  55   2        
  56   2          while (BUSY==1);
  57   2              data_value= ADresult;
  58   2            
  59   2            
  60   2              #if ISDDebug == ENABLE_ISD
  61   2              ISDcheck();      // Polling for ISD command for software breakpoint
  62   2              #endif
  63   2              
  64   2          }
  65   1      }
  66          
  67          
  68          //void EE_write ( unsigned int  addr, unsigned char dat1, unsigned char dat2
  69          
C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:28:27 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 27
0000 120000      E     LCALL   InitISDDebug
                                           ; SOURCE LINE # 28
0003 120000      E     LCALL   InitTimer3
                                           ; SOURCE LINE # 30
0006 120000      E     LCALL   InitTimer01
                                           ; SOURCE LINE # 33
0009 120000      E     LCALL   InitDAC
                                           ; SOURCE LINE # 35
000C 120000      E     LCALL   InitGPIO
                                           ; SOURCE LINE # 39
000F D2AF              SETB    EAL
0011         ?C0001:
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 45
0011 AF00        R     MOV     R7,pwm_capture+03H
0013 AE00        R     MOV     R6,pwm_capture+02H
0015 AD00        R     MOV     R5,pwm_capture+01H
0017 AC00        R     MOV     R4,pwm_capture
0019 780B              MOV     R0,#0BH
001B 120000      E     LCALL   ?C?ULSHRR515
001E 8F00        R     MOV     dac_value,R7
                                           ; SOURCE LINE # 46
0020 90E07B            MOV     DPTR,#0E07BH
0023 7488              MOV     A,#088H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 47
0026 90E07C            MOV     DPTR,#0E07CH
0029 74FF              MOV     A,#0FFH
002B F0                MOVX    @DPTR,A
002C         ?C0003:
                                           ; SOURCE LINE # 56
002C 90E05A            MOV     DPTR,#0E05AH
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 C4                SWAP    A
0033 13                RRC     A
0034 13                RRC     A
0035 5403              ANL     A,#03H
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 20E0F0            JB      ACC.0,?C0003
003C         ?C0004:
                                           ; SOURCE LINE # 57
003C 850000      R     MOV     data_value,ADresult
003F 850000      R     MOV     data_value+01H,ADresult+01H
                                           ; SOURCE LINE # 61
0042 20ACCC            JB      ES,?C0001
0045 3098C9            JNB     RI,?C0001
0048 E599              MOV     A,SBUF
004A 64A5              XRL     A,#0A5H
004C 6004              JZ      ?C0007
004E C298              CLR     RI
0050 80BF              SJMP    ?C0001
C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:28:27 PAGE 4   

0052         ?C0007:
0052 120000      E     LCALL   __isd_init
0055         ?C0008:
0055         ?C0006:
0055         ?C0005:
                                           ; SOURCE LINE # 64
0055 80BA              SJMP    ?C0001
0057         ?C0002:
                                           ; SOURCE LINE # 65
0057         ?C0009:
0057 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     88    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
