C51 COMPILER V9.54   MAIN                                                                  11/11/2018 22:11:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OUTPUT\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SRC\main.c OPTIMIZE(0,SPEED) REGFILE(.\OUTPUT\motor.ORC) BROWSE INTVECTO
                    -R(0X2000) INCDIR(.\INC) DEBUG OBJECTEXTEND CODE PRINT(.\files\main.lst) TABS(2) OBJECT(.\OUTPUT\main.obj)

line level    source

   1          #include "register.h"
   2          #include <intrins.h>
   3          #include "app.h"
   4          #include "initial.h"
   5          #include "motorLib.h"
   6          #include "ISD51.H"
   7          #include "epwm.h"
   8          #include "IQmathLib.h"
   9          
  10          #pragma mdu_r515          //use hardware math unit
  11          
  12          
  13          
  14           unsigned int ADresult;
  15           unsigned int data_value;
  16           
  17           unsigned char tmr3_ov,dac_value;
  18           unsigned long last_capture,this_capture, pwm_capture;
  19           
  20          _iq input,sin_out;     //gobal_q =24
  21           
  22          U32 EE_data;
  23          S32 math_data;
  24          U8  index; 
  25          
  26          void main(void)
  27          {
  28   1          #if ISDDebug == DISABLE_ISD
                  SystemClock();
                  #endif
  31   1          InitISDDebug(); 
  32   1      
  33   1        
  34   1        //InitTimer3();        //timer 3 using P15 pin to capture pwm "low level" pulse width
  35   1        //InitTimer4();                          //start timer1
  36   1        //InitTimer01();
  37   1        //  InitADC();                           //ADC use timer0 to trigger AD start
  38   1        
  39   1        //InitDAC();
  40   1        
  41   1          InitGPIO();
  42   1        //  InitEXT();
  43   1        //InitComparator();
  44   1        //Initepwm();
  45   1        
  46   1          EAL=1;
  47   1          while(1)
  48   1          {
  49   2            
  50   2           
  51   2          math_data=Normalize(0x80000324);
  52   2            index=ARCON;
  53   2            
  54   2            math_data=math_data>>index;
C51 COMPILER V9.54   MAIN                                                                  11/11/2018 22:11:41 PAGE 2   

  55   2             
  56   2            
  57   2      //      input =  _IQ10((0.25*PI));           //test IQmathlib
  58   2            
  59   2        
  60   2            
  61   2            
  62   2        
  63   2      //      dac_value=(unsigned char)(pwm_capture>>11);             //check DAC
  64   2      //      DAC1_DAT=dac_value;
  65   2      //      DAC2_DAT=0xff;
  66   2            
  67   2            
  68   2            
  69   2      //      EE_write(0x0a, 0xabcdef12);                        //check EPROM
  70   2      //      EE_data=EE_read(0x0a);
  71   2           
  72   2          
  73   2        
  74   2      //    while (BUSY==1);                                     //check ADC
  75   2      //        data_value= ADresult;
  76   2            
  77   2            
  78   2              #if ISDDebug == ENABLE_ISD
  79   2              ISDcheck();      // Polling for ISD command for software breakpoint
  80   2              #endif
  81   2              
  82   2          }
  83   1      }
  84          
  85          
  86          
  87          
C51 COMPILER V9.54   MAIN                                                                  11/11/2018 22:11:41 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 31
0000 120000      E     LCALL   InitISDDebug
                                           ; SOURCE LINE # 41
0003 120000      E     LCALL   InitGPIO
                                           ; SOURCE LINE # 46
0006 D2AF              SETB    EAL
0008         ?C0001:
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
                                           ; SOURCE LINE # 51
0008 7F24              MOV     R7,#024H
000A 7E03              MOV     R6,#03H
000C 7D00              MOV     R5,#00H
000E 7C80              MOV     R4,#080H
0010 120000      E     LCALL   _Normalize
0013 8F00        R     MOV     math_data+03H,R7
0015 8E00        R     MOV     math_data+02H,R6
0017 8D00        R     MOV     math_data+01H,R5
0019 8C00        R     MOV     math_data,R4
                                           ; SOURCE LINE # 52
001B 85EF00      R     MOV     index,ARCON
                                           ; SOURCE LINE # 54
001E AF00        R     MOV     R7,math_data+03H
0020 AE00        R     MOV     R6,math_data+02H
0022 AD00        R     MOV     R5,math_data+01H
0024 AC00        R     MOV     R4,math_data
0026 A900        R     MOV     R1,index
0028 A801              MOV     R0,AR1
002A 120000      E     LCALL   ?C?SLSHR
002D 8F00        R     MOV     math_data+03H,R7
002F 8E00        R     MOV     math_data+02H,R6
0031 8D00        R     MOV     math_data+01H,R5
0033 8C00        R     MOV     math_data,R4
                                           ; SOURCE LINE # 79
0035 20ACD0            JB      ES,?C0001
0038 3098CD            JNB     RI,?C0001
003B E599              MOV     A,SBUF
003D 64A5              XRL     A,#0A5H
003F 6004              JZ      ?C0005
0041 C298              CLR     RI
0043 80C3              SJMP    ?C0001
0045         ?C0005:
0045 120000      E     LCALL   __isd_init
0048         ?C0006:
0048         ?C0004:
0048         ?C0003:
                                           ; SOURCE LINE # 82
0048 80BE              SJMP    ?C0001
004A         ?C0002:
                                           ; SOURCE LINE # 83
004A         ?C0007:
004A 22                RET     
             ; FUNCTION main (END)



C51 COMPILER V9.54   MAIN                                                                  11/11/2018 22:11:41 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     75    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
