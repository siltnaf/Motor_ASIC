C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:41:36 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OUTPUT\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SRC\main.c OPTIMIZE(0,SPEED) REGFILE(.\OUTPUT\motor.ORC) BROWSE INTVECTO
                    -R(0X2000) INCDIR(.\INC) DEBUG OBJECTEXTEND CODE PRINT(.\files\main.lst) TABS(2) OBJECT(.\OUTPUT\main.obj)

line level    source

   1          #include "register.h"
   2          #include <intrins.h>
   3          #include "app.h"
   4          #include "initial.h"
   5          #include "lib.h"
   6          #include "ISD51.H"
   7          #include "epwm.h"
   8          
   9          #pragma mdu_r515          //use hardware math unit
  10          
  11          
  12          
  13           unsigned int ADresult;
  14           unsigned int data_value;
  15           
  16           unsigned char tmr3_ov,dac_value;
  17           unsigned long last_capture,this_capture, pwm_capture;
  18           
  19          U32 EE_data;
  20           
  21          
  22          void main(void)
  23          {
  24   1          #if ISDDebug == DISABLE_ISD
                  SystemClock();
                  #endif
  27   1          InitISDDebug(); 
  28   1      InitTimer3();        //timer 3 using P15 pin to capture pwm "low level" pulse width
  29   1        //InitTimer4();                          //start timer1
  30   1        InitTimer01();
  31   1      //  InitADC();                           //ADC use timer0 to trigger AD start
  32   1        
  33   1        InitDAC();
  34   1        
  35   1          InitGPIO();
  36   1        //  InitEXT();
  37   1        //InitComparator();
  38   1        Initepwm();
  39   1        
  40   1          EAL=1;
  41   1          while(1)
  42   1          {
  43   2            
  44   2           
  45   2        
  46   2            dac_value=(unsigned char)(pwm_capture>>11);
  47   2            DAC1_DAT=0x88;
  48   2            DAC2_DAT=0xff;
  49   2            
  50   2            
  51   2            
  52   2      //      EE_write(0x0a, 0xabcdef12);
  53   2      //      EE_data=EE_read(0x0a);
  54   2           
C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:41:36 PAGE 2   

  55   2          
  56   2        
  57   2          while (BUSY==1);
  58   2              data_value= ADresult;
  59   2            
  60   2            
  61   2              #if ISDDebug == ENABLE_ISD
  62   2              ISDcheck();      // Polling for ISD command for software breakpoint
  63   2              #endif
  64   2              
  65   2          }
  66   1      }
  67          
  68          
  69          //void EE_write ( unsigned int  addr, unsigned char dat1, unsigned char dat2
  70          
C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:41:36 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 22
                                           ; SOURCE LINE # 23
                                           ; SOURCE LINE # 27
0000 120000      E     LCALL   InitISDDebug
                                           ; SOURCE LINE # 28
0003 120000      E     LCALL   InitTimer3
                                           ; SOURCE LINE # 30
0006 120000      E     LCALL   InitTimer01
                                           ; SOURCE LINE # 33
0009 120000      E     LCALL   InitDAC
                                           ; SOURCE LINE # 35
000C 120000      E     LCALL   InitGPIO
                                           ; SOURCE LINE # 38
000F 120000      E     LCALL   Initepwm
                                           ; SOURCE LINE # 40
0012 D2AF              SETB    EAL
0014         ?C0001:
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 46
0014 AF00        R     MOV     R7,pwm_capture+03H
0016 AE00        R     MOV     R6,pwm_capture+02H
0018 AD00        R     MOV     R5,pwm_capture+01H
001A AC00        R     MOV     R4,pwm_capture
001C 780B              MOV     R0,#0BH
001E 120000      E     LCALL   ?C?ULSHRR515
0021 8F00        R     MOV     dac_value,R7
                                           ; SOURCE LINE # 47
0023 90E07B            MOV     DPTR,#0E07BH
0026 7488              MOV     A,#088H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 48
0029 90E07C            MOV     DPTR,#0E07CH
002C 74FF              MOV     A,#0FFH
002E F0                MOVX    @DPTR,A
002F         ?C0003:
                                           ; SOURCE LINE # 57
002F 90E05A            MOV     DPTR,#0E05AH
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 C4                SWAP    A
0036 13                RRC     A
0037 13                RRC     A
0038 5403              ANL     A,#03H
003A FF                MOV     R7,A
003B EF                MOV     A,R7
003C 20E0F0            JB      ACC.0,?C0003
003F         ?C0004:
                                           ; SOURCE LINE # 58
003F 850000      R     MOV     data_value,ADresult
0042 850000      R     MOV     data_value+01H,ADresult+01H
                                           ; SOURCE LINE # 62
0045 20ACCC            JB      ES,?C0001
0048 3098C9            JNB     RI,?C0001
004B E599              MOV     A,SBUF
004D 64A5              XRL     A,#0A5H
004F 6004              JZ      ?C0007
C51 COMPILER V9.54   MAIN                                                                  11/03/2018 17:41:36 PAGE 4   

0051 C298              CLR     RI
0053 80BF              SJMP    ?C0001
0055         ?C0007:
0055 120000      E     LCALL   __isd_init
0058         ?C0008:
0058         ?C0006:
0058         ?C0005:
                                           ; SOURCE LINE # 65
0058 80BA              SJMP    ?C0001
005A         ?C0002:
                                           ; SOURCE LINE # 66
005A         ?C0009:
005A 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     91    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
